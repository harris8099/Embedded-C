
003Add.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000115c  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080012ec  080012ec  000022ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800132c  0800132c  00003064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800132c  0800132c  0000232c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001334  08001334  00003064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001334  08001334  00002334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001338  08001338  00002338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  0800133c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00003064  2**0
                  CONTENTS
 10 .bss          00000170  20000064  20000064  00003064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001d4  200001d4  00003064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000950  00000000  00000000  0000308e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000320  00000000  00000000  000039de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00003d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00003e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000414a  00000000  00000000  00003ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001415  00000000  00000000  00008020  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000098c5  00000000  00000000  00009435  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00012cfa  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b08  00000000  00000000  00012d40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000071  00000000  00000000  00013848  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080012d4 	.word	0x080012d4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080012d4 	.word	0x080012d4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
int g_data1 = -4000;
int g_data2 = 200;
int result = 0;

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	result = g_data1 + g_data2;
 8000274:	4b07      	ldr	r3, [pc, #28]	@ (8000294 <main+0x24>)
 8000276:	681a      	ldr	r2, [r3, #0]
 8000278:	4b07      	ldr	r3, [pc, #28]	@ (8000298 <main+0x28>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4413      	add	r3, r2
 800027e:	4a07      	ldr	r2, [pc, #28]	@ (800029c <main+0x2c>)
 8000280:	6013      	str	r3, [r2, #0]

	printf("Result = %d\n", result);
 8000282:	4b06      	ldr	r3, [pc, #24]	@ (800029c <main+0x2c>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4619      	mov	r1, r3
 8000288:	4805      	ldr	r0, [pc, #20]	@ (80002a0 <main+0x30>)
 800028a:	f000 f9bd 	bl	8000608 <iprintf>
    /* Loop forever */
	for(;;);
 800028e:	bf00      	nop
 8000290:	e7fd      	b.n	800028e <main+0x1e>
 8000292:	bf00      	nop
 8000294:	20000000 	.word	0x20000000
 8000298:	20000004 	.word	0x20000004
 800029c:	20000080 	.word	0x20000080
 80002a0:	080012ec 	.word	0x080012ec

080002a4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	4603      	mov	r3, r0
 80002ac:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002ae:	4b0e      	ldr	r3, [pc, #56]	@ (80002e8 <ITM_SendChar+0x44>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	4a0d      	ldr	r2, [pc, #52]	@ (80002e8 <ITM_SendChar+0x44>)
 80002b4:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002b8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002ba:	4b0c      	ldr	r3, [pc, #48]	@ (80002ec <ITM_SendChar+0x48>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a0b      	ldr	r2, [pc, #44]	@ (80002ec <ITM_SendChar+0x48>)
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002c6:	bf00      	nop
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f003 0301 	and.w	r3, r3, #1
 80002d2:	2b00      	cmp	r3, #0
 80002d4:	d0f8      	beq.n	80002c8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002d6:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002da:	79fb      	ldrb	r3, [r7, #7]
 80002dc:	6013      	str	r3, [r2, #0]
}
 80002de:	bf00      	nop
 80002e0:	370c      	adds	r7, #12
 80002e2:	46bd      	mov	sp, r7
 80002e4:	bc80      	pop	{r7}
 80002e6:	4770      	bx	lr
 80002e8:	e000edfc 	.word	0xe000edfc
 80002ec:	e0000e00 	.word	0xe0000e00

080002f0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60f8      	str	r0, [r7, #12]
 80002f8:	60b9      	str	r1, [r7, #8]
 80002fa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	e00a      	b.n	8000318 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000302:	f3af 8000 	nop.w
 8000306:	4601      	mov	r1, r0
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	b2ca      	uxtb	r2, r1
 8000310:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf0      	blt.n	8000302 <_read+0x12>
  }

  return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032a:	b580      	push	{r7, lr}
 800032c:	b086      	sub	sp, #24
 800032e:	af00      	add	r7, sp, #0
 8000330:	60f8      	str	r0, [r7, #12]
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	2300      	movs	r3, #0
 8000338:	617b      	str	r3, [r7, #20]
 800033a:	e009      	b.n	8000350 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f7ff ffad 	bl	80002a4 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf1      	blt.n	800033c <_write+0x12>
  }
  return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_close>:

int _close(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800036a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	bc80      	pop	{r7}
 8000376:	4770      	bx	lr

08000378 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000378:	b480      	push	{r7}
 800037a:	b083      	sub	sp, #12
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000382:	683b      	ldr	r3, [r7, #0]
 8000384:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000388:	605a      	str	r2, [r3, #4]
  return 0;
 800038a:	2300      	movs	r3, #0
}
 800038c:	4618      	mov	r0, r3
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	bc80      	pop	{r7}
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bc80      	pop	{r7}
 80003a8:	4770      	bx	lr

080003aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b085      	sub	sp, #20
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	60f8      	str	r0, [r7, #12]
 80003b2:	60b9      	str	r1, [r7, #8]
 80003b4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003b6:	2300      	movs	r3, #0
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	3714      	adds	r7, #20
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
	...

080003c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b086      	sub	sp, #24
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003cc:	4a14      	ldr	r2, [pc, #80]	@ (8000420 <_sbrk+0x5c>)
 80003ce:	4b15      	ldr	r3, [pc, #84]	@ (8000424 <_sbrk+0x60>)
 80003d0:	1ad3      	subs	r3, r2, r3
 80003d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d4:	697b      	ldr	r3, [r7, #20]
 80003d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003d8:	4b13      	ldr	r3, [pc, #76]	@ (8000428 <_sbrk+0x64>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	2b00      	cmp	r3, #0
 80003de:	d102      	bne.n	80003e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e0:	4b11      	ldr	r3, [pc, #68]	@ (8000428 <_sbrk+0x64>)
 80003e2:	4a12      	ldr	r2, [pc, #72]	@ (800042c <_sbrk+0x68>)
 80003e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003e6:	4b10      	ldr	r3, [pc, #64]	@ (8000428 <_sbrk+0x64>)
 80003e8:	681a      	ldr	r2, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4413      	add	r3, r2
 80003ee:	693a      	ldr	r2, [r7, #16]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	d207      	bcs.n	8000404 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f4:	f000 f9ac 	bl	8000750 <__errno>
 80003f8:	4603      	mov	r3, r0
 80003fa:	220c      	movs	r2, #12
 80003fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003fe:	f04f 33ff 	mov.w	r3, #4294967295
 8000402:	e009      	b.n	8000418 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000404:	4b08      	ldr	r3, [pc, #32]	@ (8000428 <_sbrk+0x64>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800040a:	4b07      	ldr	r3, [pc, #28]	@ (8000428 <_sbrk+0x64>)
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4413      	add	r3, r2
 8000412:	4a05      	ldr	r2, [pc, #20]	@ (8000428 <_sbrk+0x64>)
 8000414:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000416:	68fb      	ldr	r3, [r7, #12]
}
 8000418:	4618      	mov	r0, r3
 800041a:	3718      	adds	r7, #24
 800041c:	46bd      	mov	sp, r7
 800041e:	bd80      	pop	{r7, pc}
 8000420:	20020000 	.word	0x20020000
 8000424:	00000400 	.word	0x00000400
 8000428:	20000084 	.word	0x20000084
 800042c:	200001d8 	.word	0x200001d8

08000430 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000430:	480d      	ldr	r0, [pc, #52]	@ (8000468 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000432:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000434:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000438:	480c      	ldr	r0, [pc, #48]	@ (800046c <LoopForever+0x6>)
  ldr r1, =_edata
 800043a:	490d      	ldr	r1, [pc, #52]	@ (8000470 <LoopForever+0xa>)
  ldr r2, =_sidata
 800043c:	4a0d      	ldr	r2, [pc, #52]	@ (8000474 <LoopForever+0xe>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000440:	e002      	b.n	8000448 <LoopCopyDataInit>

08000442 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000442:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000444:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000446:	3304      	adds	r3, #4

08000448 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000448:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800044a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800044c:	d3f9      	bcc.n	8000442 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800044e:	4a0a      	ldr	r2, [pc, #40]	@ (8000478 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000450:	4c0a      	ldr	r4, [pc, #40]	@ (800047c <LoopForever+0x16>)
  movs r3, #0
 8000452:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000454:	e001      	b.n	800045a <LoopFillZerobss>

08000456 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000456:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000458:	3204      	adds	r2, #4

0800045a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800045a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800045c:	d3fb      	bcc.n	8000456 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800045e:	f000 f97d 	bl	800075c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000462:	f7ff ff05 	bl	8000270 <main>

08000466 <LoopForever>:

LoopForever:
  b LoopForever
 8000466:	e7fe      	b.n	8000466 <LoopForever>
  ldr   r0, =_estack
 8000468:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800046c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000470:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000474:	0800133c 	.word	0x0800133c
  ldr r2, =_sbss
 8000478:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800047c:	200001d4 	.word	0x200001d4

08000480 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000480:	e7fe      	b.n	8000480 <ADC_IRQHandler>
	...

08000484 <std>:
 8000484:	2300      	movs	r3, #0
 8000486:	b510      	push	{r4, lr}
 8000488:	4604      	mov	r4, r0
 800048a:	e9c0 3300 	strd	r3, r3, [r0]
 800048e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000492:	6083      	str	r3, [r0, #8]
 8000494:	8181      	strh	r1, [r0, #12]
 8000496:	6643      	str	r3, [r0, #100]	@ 0x64
 8000498:	81c2      	strh	r2, [r0, #14]
 800049a:	6183      	str	r3, [r0, #24]
 800049c:	4619      	mov	r1, r3
 800049e:	2208      	movs	r2, #8
 80004a0:	305c      	adds	r0, #92	@ 0x5c
 80004a2:	f000 f906 	bl	80006b2 <memset>
 80004a6:	4b0d      	ldr	r3, [pc, #52]	@ (80004dc <std+0x58>)
 80004a8:	6263      	str	r3, [r4, #36]	@ 0x24
 80004aa:	4b0d      	ldr	r3, [pc, #52]	@ (80004e0 <std+0x5c>)
 80004ac:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004ae:	4b0d      	ldr	r3, [pc, #52]	@ (80004e4 <std+0x60>)
 80004b0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004b2:	4b0d      	ldr	r3, [pc, #52]	@ (80004e8 <std+0x64>)
 80004b4:	6323      	str	r3, [r4, #48]	@ 0x30
 80004b6:	4b0d      	ldr	r3, [pc, #52]	@ (80004ec <std+0x68>)
 80004b8:	6224      	str	r4, [r4, #32]
 80004ba:	429c      	cmp	r4, r3
 80004bc:	d006      	beq.n	80004cc <std+0x48>
 80004be:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004c2:	4294      	cmp	r4, r2
 80004c4:	d002      	beq.n	80004cc <std+0x48>
 80004c6:	33d0      	adds	r3, #208	@ 0xd0
 80004c8:	429c      	cmp	r4, r3
 80004ca:	d105      	bne.n	80004d8 <std+0x54>
 80004cc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004d4:	f000 b966 	b.w	80007a4 <__retarget_lock_init_recursive>
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	bf00      	nop
 80004dc:	0800062d 	.word	0x0800062d
 80004e0:	0800064f 	.word	0x0800064f
 80004e4:	08000687 	.word	0x08000687
 80004e8:	080006ab 	.word	0x080006ab
 80004ec:	20000088 	.word	0x20000088

080004f0 <stdio_exit_handler>:
 80004f0:	4a02      	ldr	r2, [pc, #8]	@ (80004fc <stdio_exit_handler+0xc>)
 80004f2:	4903      	ldr	r1, [pc, #12]	@ (8000500 <stdio_exit_handler+0x10>)
 80004f4:	4803      	ldr	r0, [pc, #12]	@ (8000504 <stdio_exit_handler+0x14>)
 80004f6:	f000 b869 	b.w	80005cc <_fwalk_sglue>
 80004fa:	bf00      	nop
 80004fc:	20000008 	.word	0x20000008
 8000500:	08001035 	.word	0x08001035
 8000504:	20000018 	.word	0x20000018

08000508 <cleanup_stdio>:
 8000508:	6841      	ldr	r1, [r0, #4]
 800050a:	4b0c      	ldr	r3, [pc, #48]	@ (800053c <cleanup_stdio+0x34>)
 800050c:	4299      	cmp	r1, r3
 800050e:	b510      	push	{r4, lr}
 8000510:	4604      	mov	r4, r0
 8000512:	d001      	beq.n	8000518 <cleanup_stdio+0x10>
 8000514:	f000 fd8e 	bl	8001034 <_fflush_r>
 8000518:	68a1      	ldr	r1, [r4, #8]
 800051a:	4b09      	ldr	r3, [pc, #36]	@ (8000540 <cleanup_stdio+0x38>)
 800051c:	4299      	cmp	r1, r3
 800051e:	d002      	beq.n	8000526 <cleanup_stdio+0x1e>
 8000520:	4620      	mov	r0, r4
 8000522:	f000 fd87 	bl	8001034 <_fflush_r>
 8000526:	68e1      	ldr	r1, [r4, #12]
 8000528:	4b06      	ldr	r3, [pc, #24]	@ (8000544 <cleanup_stdio+0x3c>)
 800052a:	4299      	cmp	r1, r3
 800052c:	d004      	beq.n	8000538 <cleanup_stdio+0x30>
 800052e:	4620      	mov	r0, r4
 8000530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000534:	f000 bd7e 	b.w	8001034 <_fflush_r>
 8000538:	bd10      	pop	{r4, pc}
 800053a:	bf00      	nop
 800053c:	20000088 	.word	0x20000088
 8000540:	200000f0 	.word	0x200000f0
 8000544:	20000158 	.word	0x20000158

08000548 <global_stdio_init.part.0>:
 8000548:	b510      	push	{r4, lr}
 800054a:	4b0b      	ldr	r3, [pc, #44]	@ (8000578 <global_stdio_init.part.0+0x30>)
 800054c:	4c0b      	ldr	r4, [pc, #44]	@ (800057c <global_stdio_init.part.0+0x34>)
 800054e:	4a0c      	ldr	r2, [pc, #48]	@ (8000580 <global_stdio_init.part.0+0x38>)
 8000550:	601a      	str	r2, [r3, #0]
 8000552:	4620      	mov	r0, r4
 8000554:	2200      	movs	r2, #0
 8000556:	2104      	movs	r1, #4
 8000558:	f7ff ff94 	bl	8000484 <std>
 800055c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000560:	2201      	movs	r2, #1
 8000562:	2109      	movs	r1, #9
 8000564:	f7ff ff8e 	bl	8000484 <std>
 8000568:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800056c:	2202      	movs	r2, #2
 800056e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000572:	2112      	movs	r1, #18
 8000574:	f7ff bf86 	b.w	8000484 <std>
 8000578:	200001c0 	.word	0x200001c0
 800057c:	20000088 	.word	0x20000088
 8000580:	080004f1 	.word	0x080004f1

08000584 <__sfp_lock_acquire>:
 8000584:	4801      	ldr	r0, [pc, #4]	@ (800058c <__sfp_lock_acquire+0x8>)
 8000586:	f000 b90e 	b.w	80007a6 <__retarget_lock_acquire_recursive>
 800058a:	bf00      	nop
 800058c:	200001c9 	.word	0x200001c9

08000590 <__sfp_lock_release>:
 8000590:	4801      	ldr	r0, [pc, #4]	@ (8000598 <__sfp_lock_release+0x8>)
 8000592:	f000 b909 	b.w	80007a8 <__retarget_lock_release_recursive>
 8000596:	bf00      	nop
 8000598:	200001c9 	.word	0x200001c9

0800059c <__sinit>:
 800059c:	b510      	push	{r4, lr}
 800059e:	4604      	mov	r4, r0
 80005a0:	f7ff fff0 	bl	8000584 <__sfp_lock_acquire>
 80005a4:	6a23      	ldr	r3, [r4, #32]
 80005a6:	b11b      	cbz	r3, 80005b0 <__sinit+0x14>
 80005a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ac:	f7ff bff0 	b.w	8000590 <__sfp_lock_release>
 80005b0:	4b04      	ldr	r3, [pc, #16]	@ (80005c4 <__sinit+0x28>)
 80005b2:	6223      	str	r3, [r4, #32]
 80005b4:	4b04      	ldr	r3, [pc, #16]	@ (80005c8 <__sinit+0x2c>)
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d1f5      	bne.n	80005a8 <__sinit+0xc>
 80005bc:	f7ff ffc4 	bl	8000548 <global_stdio_init.part.0>
 80005c0:	e7f2      	b.n	80005a8 <__sinit+0xc>
 80005c2:	bf00      	nop
 80005c4:	08000509 	.word	0x08000509
 80005c8:	200001c0 	.word	0x200001c0

080005cc <_fwalk_sglue>:
 80005cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005d0:	4607      	mov	r7, r0
 80005d2:	4688      	mov	r8, r1
 80005d4:	4614      	mov	r4, r2
 80005d6:	2600      	movs	r6, #0
 80005d8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005dc:	f1b9 0901 	subs.w	r9, r9, #1
 80005e0:	d505      	bpl.n	80005ee <_fwalk_sglue+0x22>
 80005e2:	6824      	ldr	r4, [r4, #0]
 80005e4:	2c00      	cmp	r4, #0
 80005e6:	d1f7      	bne.n	80005d8 <_fwalk_sglue+0xc>
 80005e8:	4630      	mov	r0, r6
 80005ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005ee:	89ab      	ldrh	r3, [r5, #12]
 80005f0:	2b01      	cmp	r3, #1
 80005f2:	d907      	bls.n	8000604 <_fwalk_sglue+0x38>
 80005f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005f8:	3301      	adds	r3, #1
 80005fa:	d003      	beq.n	8000604 <_fwalk_sglue+0x38>
 80005fc:	4629      	mov	r1, r5
 80005fe:	4638      	mov	r0, r7
 8000600:	47c0      	blx	r8
 8000602:	4306      	orrs	r6, r0
 8000604:	3568      	adds	r5, #104	@ 0x68
 8000606:	e7e9      	b.n	80005dc <_fwalk_sglue+0x10>

08000608 <iprintf>:
 8000608:	b40f      	push	{r0, r1, r2, r3}
 800060a:	b507      	push	{r0, r1, r2, lr}
 800060c:	4906      	ldr	r1, [pc, #24]	@ (8000628 <iprintf+0x20>)
 800060e:	ab04      	add	r3, sp, #16
 8000610:	6808      	ldr	r0, [r1, #0]
 8000612:	f853 2b04 	ldr.w	r2, [r3], #4
 8000616:	6881      	ldr	r1, [r0, #8]
 8000618:	9301      	str	r3, [sp, #4]
 800061a:	f000 f9e7 	bl	80009ec <_vfiprintf_r>
 800061e:	b003      	add	sp, #12
 8000620:	f85d eb04 	ldr.w	lr, [sp], #4
 8000624:	b004      	add	sp, #16
 8000626:	4770      	bx	lr
 8000628:	20000014 	.word	0x20000014

0800062c <__sread>:
 800062c:	b510      	push	{r4, lr}
 800062e:	460c      	mov	r4, r1
 8000630:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000634:	f000 f868 	bl	8000708 <_read_r>
 8000638:	2800      	cmp	r0, #0
 800063a:	bfab      	itete	ge
 800063c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800063e:	89a3      	ldrhlt	r3, [r4, #12]
 8000640:	181b      	addge	r3, r3, r0
 8000642:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000646:	bfac      	ite	ge
 8000648:	6563      	strge	r3, [r4, #84]	@ 0x54
 800064a:	81a3      	strhlt	r3, [r4, #12]
 800064c:	bd10      	pop	{r4, pc}

0800064e <__swrite>:
 800064e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000652:	461f      	mov	r7, r3
 8000654:	898b      	ldrh	r3, [r1, #12]
 8000656:	05db      	lsls	r3, r3, #23
 8000658:	4605      	mov	r5, r0
 800065a:	460c      	mov	r4, r1
 800065c:	4616      	mov	r6, r2
 800065e:	d505      	bpl.n	800066c <__swrite+0x1e>
 8000660:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000664:	2302      	movs	r3, #2
 8000666:	2200      	movs	r2, #0
 8000668:	f000 f83c 	bl	80006e4 <_lseek_r>
 800066c:	89a3      	ldrh	r3, [r4, #12]
 800066e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000672:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000676:	81a3      	strh	r3, [r4, #12]
 8000678:	4632      	mov	r2, r6
 800067a:	463b      	mov	r3, r7
 800067c:	4628      	mov	r0, r5
 800067e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000682:	f000 b853 	b.w	800072c <_write_r>

08000686 <__sseek>:
 8000686:	b510      	push	{r4, lr}
 8000688:	460c      	mov	r4, r1
 800068a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800068e:	f000 f829 	bl	80006e4 <_lseek_r>
 8000692:	1c43      	adds	r3, r0, #1
 8000694:	89a3      	ldrh	r3, [r4, #12]
 8000696:	bf15      	itete	ne
 8000698:	6560      	strne	r0, [r4, #84]	@ 0x54
 800069a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800069e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006a2:	81a3      	strheq	r3, [r4, #12]
 80006a4:	bf18      	it	ne
 80006a6:	81a3      	strhne	r3, [r4, #12]
 80006a8:	bd10      	pop	{r4, pc}

080006aa <__sclose>:
 80006aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ae:	f000 b809 	b.w	80006c4 <_close_r>

080006b2 <memset>:
 80006b2:	4402      	add	r2, r0
 80006b4:	4603      	mov	r3, r0
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d100      	bne.n	80006bc <memset+0xa>
 80006ba:	4770      	bx	lr
 80006bc:	f803 1b01 	strb.w	r1, [r3], #1
 80006c0:	e7f9      	b.n	80006b6 <memset+0x4>
	...

080006c4 <_close_r>:
 80006c4:	b538      	push	{r3, r4, r5, lr}
 80006c6:	4d06      	ldr	r5, [pc, #24]	@ (80006e0 <_close_r+0x1c>)
 80006c8:	2300      	movs	r3, #0
 80006ca:	4604      	mov	r4, r0
 80006cc:	4608      	mov	r0, r1
 80006ce:	602b      	str	r3, [r5, #0]
 80006d0:	f7ff fe47 	bl	8000362 <_close>
 80006d4:	1c43      	adds	r3, r0, #1
 80006d6:	d102      	bne.n	80006de <_close_r+0x1a>
 80006d8:	682b      	ldr	r3, [r5, #0]
 80006da:	b103      	cbz	r3, 80006de <_close_r+0x1a>
 80006dc:	6023      	str	r3, [r4, #0]
 80006de:	bd38      	pop	{r3, r4, r5, pc}
 80006e0:	200001c4 	.word	0x200001c4

080006e4 <_lseek_r>:
 80006e4:	b538      	push	{r3, r4, r5, lr}
 80006e6:	4d07      	ldr	r5, [pc, #28]	@ (8000704 <_lseek_r+0x20>)
 80006e8:	4604      	mov	r4, r0
 80006ea:	4608      	mov	r0, r1
 80006ec:	4611      	mov	r1, r2
 80006ee:	2200      	movs	r2, #0
 80006f0:	602a      	str	r2, [r5, #0]
 80006f2:	461a      	mov	r2, r3
 80006f4:	f7ff fe59 	bl	80003aa <_lseek>
 80006f8:	1c43      	adds	r3, r0, #1
 80006fa:	d102      	bne.n	8000702 <_lseek_r+0x1e>
 80006fc:	682b      	ldr	r3, [r5, #0]
 80006fe:	b103      	cbz	r3, 8000702 <_lseek_r+0x1e>
 8000700:	6023      	str	r3, [r4, #0]
 8000702:	bd38      	pop	{r3, r4, r5, pc}
 8000704:	200001c4 	.word	0x200001c4

08000708 <_read_r>:
 8000708:	b538      	push	{r3, r4, r5, lr}
 800070a:	4d07      	ldr	r5, [pc, #28]	@ (8000728 <_read_r+0x20>)
 800070c:	4604      	mov	r4, r0
 800070e:	4608      	mov	r0, r1
 8000710:	4611      	mov	r1, r2
 8000712:	2200      	movs	r2, #0
 8000714:	602a      	str	r2, [r5, #0]
 8000716:	461a      	mov	r2, r3
 8000718:	f7ff fdea 	bl	80002f0 <_read>
 800071c:	1c43      	adds	r3, r0, #1
 800071e:	d102      	bne.n	8000726 <_read_r+0x1e>
 8000720:	682b      	ldr	r3, [r5, #0]
 8000722:	b103      	cbz	r3, 8000726 <_read_r+0x1e>
 8000724:	6023      	str	r3, [r4, #0]
 8000726:	bd38      	pop	{r3, r4, r5, pc}
 8000728:	200001c4 	.word	0x200001c4

0800072c <_write_r>:
 800072c:	b538      	push	{r3, r4, r5, lr}
 800072e:	4d07      	ldr	r5, [pc, #28]	@ (800074c <_write_r+0x20>)
 8000730:	4604      	mov	r4, r0
 8000732:	4608      	mov	r0, r1
 8000734:	4611      	mov	r1, r2
 8000736:	2200      	movs	r2, #0
 8000738:	602a      	str	r2, [r5, #0]
 800073a:	461a      	mov	r2, r3
 800073c:	f7ff fdf5 	bl	800032a <_write>
 8000740:	1c43      	adds	r3, r0, #1
 8000742:	d102      	bne.n	800074a <_write_r+0x1e>
 8000744:	682b      	ldr	r3, [r5, #0]
 8000746:	b103      	cbz	r3, 800074a <_write_r+0x1e>
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	bd38      	pop	{r3, r4, r5, pc}
 800074c:	200001c4 	.word	0x200001c4

08000750 <__errno>:
 8000750:	4b01      	ldr	r3, [pc, #4]	@ (8000758 <__errno+0x8>)
 8000752:	6818      	ldr	r0, [r3, #0]
 8000754:	4770      	bx	lr
 8000756:	bf00      	nop
 8000758:	20000014 	.word	0x20000014

0800075c <__libc_init_array>:
 800075c:	b570      	push	{r4, r5, r6, lr}
 800075e:	4d0d      	ldr	r5, [pc, #52]	@ (8000794 <__libc_init_array+0x38>)
 8000760:	4c0d      	ldr	r4, [pc, #52]	@ (8000798 <__libc_init_array+0x3c>)
 8000762:	1b64      	subs	r4, r4, r5
 8000764:	10a4      	asrs	r4, r4, #2
 8000766:	2600      	movs	r6, #0
 8000768:	42a6      	cmp	r6, r4
 800076a:	d109      	bne.n	8000780 <__libc_init_array+0x24>
 800076c:	4d0b      	ldr	r5, [pc, #44]	@ (800079c <__libc_init_array+0x40>)
 800076e:	4c0c      	ldr	r4, [pc, #48]	@ (80007a0 <__libc_init_array+0x44>)
 8000770:	f000 fdb0 	bl	80012d4 <_init>
 8000774:	1b64      	subs	r4, r4, r5
 8000776:	10a4      	asrs	r4, r4, #2
 8000778:	2600      	movs	r6, #0
 800077a:	42a6      	cmp	r6, r4
 800077c:	d105      	bne.n	800078a <__libc_init_array+0x2e>
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f855 3b04 	ldr.w	r3, [r5], #4
 8000784:	4798      	blx	r3
 8000786:	3601      	adds	r6, #1
 8000788:	e7ee      	b.n	8000768 <__libc_init_array+0xc>
 800078a:	f855 3b04 	ldr.w	r3, [r5], #4
 800078e:	4798      	blx	r3
 8000790:	3601      	adds	r6, #1
 8000792:	e7f2      	b.n	800077a <__libc_init_array+0x1e>
 8000794:	08001334 	.word	0x08001334
 8000798:	08001334 	.word	0x08001334
 800079c:	08001334 	.word	0x08001334
 80007a0:	08001338 	.word	0x08001338

080007a4 <__retarget_lock_init_recursive>:
 80007a4:	4770      	bx	lr

080007a6 <__retarget_lock_acquire_recursive>:
 80007a6:	4770      	bx	lr

080007a8 <__retarget_lock_release_recursive>:
 80007a8:	4770      	bx	lr
	...

080007ac <_free_r>:
 80007ac:	b538      	push	{r3, r4, r5, lr}
 80007ae:	4605      	mov	r5, r0
 80007b0:	2900      	cmp	r1, #0
 80007b2:	d041      	beq.n	8000838 <_free_r+0x8c>
 80007b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007b8:	1f0c      	subs	r4, r1, #4
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	bfb8      	it	lt
 80007be:	18e4      	addlt	r4, r4, r3
 80007c0:	f000 f8e0 	bl	8000984 <__malloc_lock>
 80007c4:	4a1d      	ldr	r2, [pc, #116]	@ (800083c <_free_r+0x90>)
 80007c6:	6813      	ldr	r3, [r2, #0]
 80007c8:	b933      	cbnz	r3, 80007d8 <_free_r+0x2c>
 80007ca:	6063      	str	r3, [r4, #4]
 80007cc:	6014      	str	r4, [r2, #0]
 80007ce:	4628      	mov	r0, r5
 80007d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007d4:	f000 b8dc 	b.w	8000990 <__malloc_unlock>
 80007d8:	42a3      	cmp	r3, r4
 80007da:	d908      	bls.n	80007ee <_free_r+0x42>
 80007dc:	6820      	ldr	r0, [r4, #0]
 80007de:	1821      	adds	r1, r4, r0
 80007e0:	428b      	cmp	r3, r1
 80007e2:	bf01      	itttt	eq
 80007e4:	6819      	ldreq	r1, [r3, #0]
 80007e6:	685b      	ldreq	r3, [r3, #4]
 80007e8:	1809      	addeq	r1, r1, r0
 80007ea:	6021      	streq	r1, [r4, #0]
 80007ec:	e7ed      	b.n	80007ca <_free_r+0x1e>
 80007ee:	461a      	mov	r2, r3
 80007f0:	685b      	ldr	r3, [r3, #4]
 80007f2:	b10b      	cbz	r3, 80007f8 <_free_r+0x4c>
 80007f4:	42a3      	cmp	r3, r4
 80007f6:	d9fa      	bls.n	80007ee <_free_r+0x42>
 80007f8:	6811      	ldr	r1, [r2, #0]
 80007fa:	1850      	adds	r0, r2, r1
 80007fc:	42a0      	cmp	r0, r4
 80007fe:	d10b      	bne.n	8000818 <_free_r+0x6c>
 8000800:	6820      	ldr	r0, [r4, #0]
 8000802:	4401      	add	r1, r0
 8000804:	1850      	adds	r0, r2, r1
 8000806:	4283      	cmp	r3, r0
 8000808:	6011      	str	r1, [r2, #0]
 800080a:	d1e0      	bne.n	80007ce <_free_r+0x22>
 800080c:	6818      	ldr	r0, [r3, #0]
 800080e:	685b      	ldr	r3, [r3, #4]
 8000810:	6053      	str	r3, [r2, #4]
 8000812:	4408      	add	r0, r1
 8000814:	6010      	str	r0, [r2, #0]
 8000816:	e7da      	b.n	80007ce <_free_r+0x22>
 8000818:	d902      	bls.n	8000820 <_free_r+0x74>
 800081a:	230c      	movs	r3, #12
 800081c:	602b      	str	r3, [r5, #0]
 800081e:	e7d6      	b.n	80007ce <_free_r+0x22>
 8000820:	6820      	ldr	r0, [r4, #0]
 8000822:	1821      	adds	r1, r4, r0
 8000824:	428b      	cmp	r3, r1
 8000826:	bf04      	itt	eq
 8000828:	6819      	ldreq	r1, [r3, #0]
 800082a:	685b      	ldreq	r3, [r3, #4]
 800082c:	6063      	str	r3, [r4, #4]
 800082e:	bf04      	itt	eq
 8000830:	1809      	addeq	r1, r1, r0
 8000832:	6021      	streq	r1, [r4, #0]
 8000834:	6054      	str	r4, [r2, #4]
 8000836:	e7ca      	b.n	80007ce <_free_r+0x22>
 8000838:	bd38      	pop	{r3, r4, r5, pc}
 800083a:	bf00      	nop
 800083c:	200001d0 	.word	0x200001d0

08000840 <sbrk_aligned>:
 8000840:	b570      	push	{r4, r5, r6, lr}
 8000842:	4e0f      	ldr	r6, [pc, #60]	@ (8000880 <sbrk_aligned+0x40>)
 8000844:	460c      	mov	r4, r1
 8000846:	6831      	ldr	r1, [r6, #0]
 8000848:	4605      	mov	r5, r0
 800084a:	b911      	cbnz	r1, 8000852 <sbrk_aligned+0x12>
 800084c:	f000 fcae 	bl	80011ac <_sbrk_r>
 8000850:	6030      	str	r0, [r6, #0]
 8000852:	4621      	mov	r1, r4
 8000854:	4628      	mov	r0, r5
 8000856:	f000 fca9 	bl	80011ac <_sbrk_r>
 800085a:	1c43      	adds	r3, r0, #1
 800085c:	d103      	bne.n	8000866 <sbrk_aligned+0x26>
 800085e:	f04f 34ff 	mov.w	r4, #4294967295
 8000862:	4620      	mov	r0, r4
 8000864:	bd70      	pop	{r4, r5, r6, pc}
 8000866:	1cc4      	adds	r4, r0, #3
 8000868:	f024 0403 	bic.w	r4, r4, #3
 800086c:	42a0      	cmp	r0, r4
 800086e:	d0f8      	beq.n	8000862 <sbrk_aligned+0x22>
 8000870:	1a21      	subs	r1, r4, r0
 8000872:	4628      	mov	r0, r5
 8000874:	f000 fc9a 	bl	80011ac <_sbrk_r>
 8000878:	3001      	adds	r0, #1
 800087a:	d1f2      	bne.n	8000862 <sbrk_aligned+0x22>
 800087c:	e7ef      	b.n	800085e <sbrk_aligned+0x1e>
 800087e:	bf00      	nop
 8000880:	200001cc 	.word	0x200001cc

08000884 <_malloc_r>:
 8000884:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000888:	1ccd      	adds	r5, r1, #3
 800088a:	f025 0503 	bic.w	r5, r5, #3
 800088e:	3508      	adds	r5, #8
 8000890:	2d0c      	cmp	r5, #12
 8000892:	bf38      	it	cc
 8000894:	250c      	movcc	r5, #12
 8000896:	2d00      	cmp	r5, #0
 8000898:	4606      	mov	r6, r0
 800089a:	db01      	blt.n	80008a0 <_malloc_r+0x1c>
 800089c:	42a9      	cmp	r1, r5
 800089e:	d904      	bls.n	80008aa <_malloc_r+0x26>
 80008a0:	230c      	movs	r3, #12
 80008a2:	6033      	str	r3, [r6, #0]
 80008a4:	2000      	movs	r0, #0
 80008a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008aa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000980 <_malloc_r+0xfc>
 80008ae:	f000 f869 	bl	8000984 <__malloc_lock>
 80008b2:	f8d8 3000 	ldr.w	r3, [r8]
 80008b6:	461c      	mov	r4, r3
 80008b8:	bb44      	cbnz	r4, 800090c <_malloc_r+0x88>
 80008ba:	4629      	mov	r1, r5
 80008bc:	4630      	mov	r0, r6
 80008be:	f7ff ffbf 	bl	8000840 <sbrk_aligned>
 80008c2:	1c43      	adds	r3, r0, #1
 80008c4:	4604      	mov	r4, r0
 80008c6:	d158      	bne.n	800097a <_malloc_r+0xf6>
 80008c8:	f8d8 4000 	ldr.w	r4, [r8]
 80008cc:	4627      	mov	r7, r4
 80008ce:	2f00      	cmp	r7, #0
 80008d0:	d143      	bne.n	800095a <_malloc_r+0xd6>
 80008d2:	2c00      	cmp	r4, #0
 80008d4:	d04b      	beq.n	800096e <_malloc_r+0xea>
 80008d6:	6823      	ldr	r3, [r4, #0]
 80008d8:	4639      	mov	r1, r7
 80008da:	4630      	mov	r0, r6
 80008dc:	eb04 0903 	add.w	r9, r4, r3
 80008e0:	f000 fc64 	bl	80011ac <_sbrk_r>
 80008e4:	4581      	cmp	r9, r0
 80008e6:	d142      	bne.n	800096e <_malloc_r+0xea>
 80008e8:	6821      	ldr	r1, [r4, #0]
 80008ea:	1a6d      	subs	r5, r5, r1
 80008ec:	4629      	mov	r1, r5
 80008ee:	4630      	mov	r0, r6
 80008f0:	f7ff ffa6 	bl	8000840 <sbrk_aligned>
 80008f4:	3001      	adds	r0, #1
 80008f6:	d03a      	beq.n	800096e <_malloc_r+0xea>
 80008f8:	6823      	ldr	r3, [r4, #0]
 80008fa:	442b      	add	r3, r5
 80008fc:	6023      	str	r3, [r4, #0]
 80008fe:	f8d8 3000 	ldr.w	r3, [r8]
 8000902:	685a      	ldr	r2, [r3, #4]
 8000904:	bb62      	cbnz	r2, 8000960 <_malloc_r+0xdc>
 8000906:	f8c8 7000 	str.w	r7, [r8]
 800090a:	e00f      	b.n	800092c <_malloc_r+0xa8>
 800090c:	6822      	ldr	r2, [r4, #0]
 800090e:	1b52      	subs	r2, r2, r5
 8000910:	d420      	bmi.n	8000954 <_malloc_r+0xd0>
 8000912:	2a0b      	cmp	r2, #11
 8000914:	d917      	bls.n	8000946 <_malloc_r+0xc2>
 8000916:	1961      	adds	r1, r4, r5
 8000918:	42a3      	cmp	r3, r4
 800091a:	6025      	str	r5, [r4, #0]
 800091c:	bf18      	it	ne
 800091e:	6059      	strne	r1, [r3, #4]
 8000920:	6863      	ldr	r3, [r4, #4]
 8000922:	bf08      	it	eq
 8000924:	f8c8 1000 	streq.w	r1, [r8]
 8000928:	5162      	str	r2, [r4, r5]
 800092a:	604b      	str	r3, [r1, #4]
 800092c:	4630      	mov	r0, r6
 800092e:	f000 f82f 	bl	8000990 <__malloc_unlock>
 8000932:	f104 000b 	add.w	r0, r4, #11
 8000936:	1d23      	adds	r3, r4, #4
 8000938:	f020 0007 	bic.w	r0, r0, #7
 800093c:	1ac2      	subs	r2, r0, r3
 800093e:	bf1c      	itt	ne
 8000940:	1a1b      	subne	r3, r3, r0
 8000942:	50a3      	strne	r3, [r4, r2]
 8000944:	e7af      	b.n	80008a6 <_malloc_r+0x22>
 8000946:	6862      	ldr	r2, [r4, #4]
 8000948:	42a3      	cmp	r3, r4
 800094a:	bf0c      	ite	eq
 800094c:	f8c8 2000 	streq.w	r2, [r8]
 8000950:	605a      	strne	r2, [r3, #4]
 8000952:	e7eb      	b.n	800092c <_malloc_r+0xa8>
 8000954:	4623      	mov	r3, r4
 8000956:	6864      	ldr	r4, [r4, #4]
 8000958:	e7ae      	b.n	80008b8 <_malloc_r+0x34>
 800095a:	463c      	mov	r4, r7
 800095c:	687f      	ldr	r7, [r7, #4]
 800095e:	e7b6      	b.n	80008ce <_malloc_r+0x4a>
 8000960:	461a      	mov	r2, r3
 8000962:	685b      	ldr	r3, [r3, #4]
 8000964:	42a3      	cmp	r3, r4
 8000966:	d1fb      	bne.n	8000960 <_malloc_r+0xdc>
 8000968:	2300      	movs	r3, #0
 800096a:	6053      	str	r3, [r2, #4]
 800096c:	e7de      	b.n	800092c <_malloc_r+0xa8>
 800096e:	230c      	movs	r3, #12
 8000970:	6033      	str	r3, [r6, #0]
 8000972:	4630      	mov	r0, r6
 8000974:	f000 f80c 	bl	8000990 <__malloc_unlock>
 8000978:	e794      	b.n	80008a4 <_malloc_r+0x20>
 800097a:	6005      	str	r5, [r0, #0]
 800097c:	e7d6      	b.n	800092c <_malloc_r+0xa8>
 800097e:	bf00      	nop
 8000980:	200001d0 	.word	0x200001d0

08000984 <__malloc_lock>:
 8000984:	4801      	ldr	r0, [pc, #4]	@ (800098c <__malloc_lock+0x8>)
 8000986:	f7ff bf0e 	b.w	80007a6 <__retarget_lock_acquire_recursive>
 800098a:	bf00      	nop
 800098c:	200001c8 	.word	0x200001c8

08000990 <__malloc_unlock>:
 8000990:	4801      	ldr	r0, [pc, #4]	@ (8000998 <__malloc_unlock+0x8>)
 8000992:	f7ff bf09 	b.w	80007a8 <__retarget_lock_release_recursive>
 8000996:	bf00      	nop
 8000998:	200001c8 	.word	0x200001c8

0800099c <__sfputc_r>:
 800099c:	6893      	ldr	r3, [r2, #8]
 800099e:	3b01      	subs	r3, #1
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	b410      	push	{r4}
 80009a4:	6093      	str	r3, [r2, #8]
 80009a6:	da07      	bge.n	80009b8 <__sfputc_r+0x1c>
 80009a8:	6994      	ldr	r4, [r2, #24]
 80009aa:	42a3      	cmp	r3, r4
 80009ac:	db01      	blt.n	80009b2 <__sfputc_r+0x16>
 80009ae:	290a      	cmp	r1, #10
 80009b0:	d102      	bne.n	80009b8 <__sfputc_r+0x1c>
 80009b2:	bc10      	pop	{r4}
 80009b4:	f000 bb66 	b.w	8001084 <__swbuf_r>
 80009b8:	6813      	ldr	r3, [r2, #0]
 80009ba:	1c58      	adds	r0, r3, #1
 80009bc:	6010      	str	r0, [r2, #0]
 80009be:	7019      	strb	r1, [r3, #0]
 80009c0:	4608      	mov	r0, r1
 80009c2:	bc10      	pop	{r4}
 80009c4:	4770      	bx	lr

080009c6 <__sfputs_r>:
 80009c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009c8:	4606      	mov	r6, r0
 80009ca:	460f      	mov	r7, r1
 80009cc:	4614      	mov	r4, r2
 80009ce:	18d5      	adds	r5, r2, r3
 80009d0:	42ac      	cmp	r4, r5
 80009d2:	d101      	bne.n	80009d8 <__sfputs_r+0x12>
 80009d4:	2000      	movs	r0, #0
 80009d6:	e007      	b.n	80009e8 <__sfputs_r+0x22>
 80009d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009dc:	463a      	mov	r2, r7
 80009de:	4630      	mov	r0, r6
 80009e0:	f7ff ffdc 	bl	800099c <__sfputc_r>
 80009e4:	1c43      	adds	r3, r0, #1
 80009e6:	d1f3      	bne.n	80009d0 <__sfputs_r+0xa>
 80009e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009ec <_vfiprintf_r>:
 80009ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009f0:	460d      	mov	r5, r1
 80009f2:	b09d      	sub	sp, #116	@ 0x74
 80009f4:	4614      	mov	r4, r2
 80009f6:	4698      	mov	r8, r3
 80009f8:	4606      	mov	r6, r0
 80009fa:	b118      	cbz	r0, 8000a04 <_vfiprintf_r+0x18>
 80009fc:	6a03      	ldr	r3, [r0, #32]
 80009fe:	b90b      	cbnz	r3, 8000a04 <_vfiprintf_r+0x18>
 8000a00:	f7ff fdcc 	bl	800059c <__sinit>
 8000a04:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a06:	07d9      	lsls	r1, r3, #31
 8000a08:	d405      	bmi.n	8000a16 <_vfiprintf_r+0x2a>
 8000a0a:	89ab      	ldrh	r3, [r5, #12]
 8000a0c:	059a      	lsls	r2, r3, #22
 8000a0e:	d402      	bmi.n	8000a16 <_vfiprintf_r+0x2a>
 8000a10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a12:	f7ff fec8 	bl	80007a6 <__retarget_lock_acquire_recursive>
 8000a16:	89ab      	ldrh	r3, [r5, #12]
 8000a18:	071b      	lsls	r3, r3, #28
 8000a1a:	d501      	bpl.n	8000a20 <_vfiprintf_r+0x34>
 8000a1c:	692b      	ldr	r3, [r5, #16]
 8000a1e:	b99b      	cbnz	r3, 8000a48 <_vfiprintf_r+0x5c>
 8000a20:	4629      	mov	r1, r5
 8000a22:	4630      	mov	r0, r6
 8000a24:	f000 fb6c 	bl	8001100 <__swsetup_r>
 8000a28:	b170      	cbz	r0, 8000a48 <_vfiprintf_r+0x5c>
 8000a2a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a2c:	07dc      	lsls	r4, r3, #31
 8000a2e:	d504      	bpl.n	8000a3a <_vfiprintf_r+0x4e>
 8000a30:	f04f 30ff 	mov.w	r0, #4294967295
 8000a34:	b01d      	add	sp, #116	@ 0x74
 8000a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a3a:	89ab      	ldrh	r3, [r5, #12]
 8000a3c:	0598      	lsls	r0, r3, #22
 8000a3e:	d4f7      	bmi.n	8000a30 <_vfiprintf_r+0x44>
 8000a40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a42:	f7ff feb1 	bl	80007a8 <__retarget_lock_release_recursive>
 8000a46:	e7f3      	b.n	8000a30 <_vfiprintf_r+0x44>
 8000a48:	2300      	movs	r3, #0
 8000a4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000a4c:	2320      	movs	r3, #32
 8000a4e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000a52:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a56:	2330      	movs	r3, #48	@ 0x30
 8000a58:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000c08 <_vfiprintf_r+0x21c>
 8000a5c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a60:	f04f 0901 	mov.w	r9, #1
 8000a64:	4623      	mov	r3, r4
 8000a66:	469a      	mov	sl, r3
 8000a68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a6c:	b10a      	cbz	r2, 8000a72 <_vfiprintf_r+0x86>
 8000a6e:	2a25      	cmp	r2, #37	@ 0x25
 8000a70:	d1f9      	bne.n	8000a66 <_vfiprintf_r+0x7a>
 8000a72:	ebba 0b04 	subs.w	fp, sl, r4
 8000a76:	d00b      	beq.n	8000a90 <_vfiprintf_r+0xa4>
 8000a78:	465b      	mov	r3, fp
 8000a7a:	4622      	mov	r2, r4
 8000a7c:	4629      	mov	r1, r5
 8000a7e:	4630      	mov	r0, r6
 8000a80:	f7ff ffa1 	bl	80009c6 <__sfputs_r>
 8000a84:	3001      	adds	r0, #1
 8000a86:	f000 80a7 	beq.w	8000bd8 <_vfiprintf_r+0x1ec>
 8000a8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000a8c:	445a      	add	r2, fp
 8000a8e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a90:	f89a 3000 	ldrb.w	r3, [sl]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	f000 809f 	beq.w	8000bd8 <_vfiprintf_r+0x1ec>
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	f04f 32ff 	mov.w	r2, #4294967295
 8000aa0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000aa4:	f10a 0a01 	add.w	sl, sl, #1
 8000aa8:	9304      	str	r3, [sp, #16]
 8000aaa:	9307      	str	r3, [sp, #28]
 8000aac:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ab0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000ab2:	4654      	mov	r4, sl
 8000ab4:	2205      	movs	r2, #5
 8000ab6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aba:	4853      	ldr	r0, [pc, #332]	@ (8000c08 <_vfiprintf_r+0x21c>)
 8000abc:	f7ff fb88 	bl	80001d0 <memchr>
 8000ac0:	9a04      	ldr	r2, [sp, #16]
 8000ac2:	b9d8      	cbnz	r0, 8000afc <_vfiprintf_r+0x110>
 8000ac4:	06d1      	lsls	r1, r2, #27
 8000ac6:	bf44      	itt	mi
 8000ac8:	2320      	movmi	r3, #32
 8000aca:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ace:	0713      	lsls	r3, r2, #28
 8000ad0:	bf44      	itt	mi
 8000ad2:	232b      	movmi	r3, #43	@ 0x2b
 8000ad4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ad8:	f89a 3000 	ldrb.w	r3, [sl]
 8000adc:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ade:	d015      	beq.n	8000b0c <_vfiprintf_r+0x120>
 8000ae0:	9a07      	ldr	r2, [sp, #28]
 8000ae2:	4654      	mov	r4, sl
 8000ae4:	2000      	movs	r0, #0
 8000ae6:	f04f 0c0a 	mov.w	ip, #10
 8000aea:	4621      	mov	r1, r4
 8000aec:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000af0:	3b30      	subs	r3, #48	@ 0x30
 8000af2:	2b09      	cmp	r3, #9
 8000af4:	d94b      	bls.n	8000b8e <_vfiprintf_r+0x1a2>
 8000af6:	b1b0      	cbz	r0, 8000b26 <_vfiprintf_r+0x13a>
 8000af8:	9207      	str	r2, [sp, #28]
 8000afa:	e014      	b.n	8000b26 <_vfiprintf_r+0x13a>
 8000afc:	eba0 0308 	sub.w	r3, r0, r8
 8000b00:	fa09 f303 	lsl.w	r3, r9, r3
 8000b04:	4313      	orrs	r3, r2
 8000b06:	9304      	str	r3, [sp, #16]
 8000b08:	46a2      	mov	sl, r4
 8000b0a:	e7d2      	b.n	8000ab2 <_vfiprintf_r+0xc6>
 8000b0c:	9b03      	ldr	r3, [sp, #12]
 8000b0e:	1d19      	adds	r1, r3, #4
 8000b10:	681b      	ldr	r3, [r3, #0]
 8000b12:	9103      	str	r1, [sp, #12]
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	bfbb      	ittet	lt
 8000b18:	425b      	neglt	r3, r3
 8000b1a:	f042 0202 	orrlt.w	r2, r2, #2
 8000b1e:	9307      	strge	r3, [sp, #28]
 8000b20:	9307      	strlt	r3, [sp, #28]
 8000b22:	bfb8      	it	lt
 8000b24:	9204      	strlt	r2, [sp, #16]
 8000b26:	7823      	ldrb	r3, [r4, #0]
 8000b28:	2b2e      	cmp	r3, #46	@ 0x2e
 8000b2a:	d10a      	bne.n	8000b42 <_vfiprintf_r+0x156>
 8000b2c:	7863      	ldrb	r3, [r4, #1]
 8000b2e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b30:	d132      	bne.n	8000b98 <_vfiprintf_r+0x1ac>
 8000b32:	9b03      	ldr	r3, [sp, #12]
 8000b34:	1d1a      	adds	r2, r3, #4
 8000b36:	681b      	ldr	r3, [r3, #0]
 8000b38:	9203      	str	r2, [sp, #12]
 8000b3a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b3e:	3402      	adds	r4, #2
 8000b40:	9305      	str	r3, [sp, #20]
 8000b42:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000c0c <_vfiprintf_r+0x220>
 8000b46:	7821      	ldrb	r1, [r4, #0]
 8000b48:	2203      	movs	r2, #3
 8000b4a:	4650      	mov	r0, sl
 8000b4c:	f7ff fb40 	bl	80001d0 <memchr>
 8000b50:	b138      	cbz	r0, 8000b62 <_vfiprintf_r+0x176>
 8000b52:	9b04      	ldr	r3, [sp, #16]
 8000b54:	eba0 000a 	sub.w	r0, r0, sl
 8000b58:	2240      	movs	r2, #64	@ 0x40
 8000b5a:	4082      	lsls	r2, r0
 8000b5c:	4313      	orrs	r3, r2
 8000b5e:	3401      	adds	r4, #1
 8000b60:	9304      	str	r3, [sp, #16]
 8000b62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b66:	482a      	ldr	r0, [pc, #168]	@ (8000c10 <_vfiprintf_r+0x224>)
 8000b68:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b6c:	2206      	movs	r2, #6
 8000b6e:	f7ff fb2f 	bl	80001d0 <memchr>
 8000b72:	2800      	cmp	r0, #0
 8000b74:	d03f      	beq.n	8000bf6 <_vfiprintf_r+0x20a>
 8000b76:	4b27      	ldr	r3, [pc, #156]	@ (8000c14 <_vfiprintf_r+0x228>)
 8000b78:	bb1b      	cbnz	r3, 8000bc2 <_vfiprintf_r+0x1d6>
 8000b7a:	9b03      	ldr	r3, [sp, #12]
 8000b7c:	3307      	adds	r3, #7
 8000b7e:	f023 0307 	bic.w	r3, r3, #7
 8000b82:	3308      	adds	r3, #8
 8000b84:	9303      	str	r3, [sp, #12]
 8000b86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000b88:	443b      	add	r3, r7
 8000b8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b8c:	e76a      	b.n	8000a64 <_vfiprintf_r+0x78>
 8000b8e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b92:	460c      	mov	r4, r1
 8000b94:	2001      	movs	r0, #1
 8000b96:	e7a8      	b.n	8000aea <_vfiprintf_r+0xfe>
 8000b98:	2300      	movs	r3, #0
 8000b9a:	3401      	adds	r4, #1
 8000b9c:	9305      	str	r3, [sp, #20]
 8000b9e:	4619      	mov	r1, r3
 8000ba0:	f04f 0c0a 	mov.w	ip, #10
 8000ba4:	4620      	mov	r0, r4
 8000ba6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000baa:	3a30      	subs	r2, #48	@ 0x30
 8000bac:	2a09      	cmp	r2, #9
 8000bae:	d903      	bls.n	8000bb8 <_vfiprintf_r+0x1cc>
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	d0c6      	beq.n	8000b42 <_vfiprintf_r+0x156>
 8000bb4:	9105      	str	r1, [sp, #20]
 8000bb6:	e7c4      	b.n	8000b42 <_vfiprintf_r+0x156>
 8000bb8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bbc:	4604      	mov	r4, r0
 8000bbe:	2301      	movs	r3, #1
 8000bc0:	e7f0      	b.n	8000ba4 <_vfiprintf_r+0x1b8>
 8000bc2:	ab03      	add	r3, sp, #12
 8000bc4:	9300      	str	r3, [sp, #0]
 8000bc6:	462a      	mov	r2, r5
 8000bc8:	4b13      	ldr	r3, [pc, #76]	@ (8000c18 <_vfiprintf_r+0x22c>)
 8000bca:	a904      	add	r1, sp, #16
 8000bcc:	4630      	mov	r0, r6
 8000bce:	f3af 8000 	nop.w
 8000bd2:	4607      	mov	r7, r0
 8000bd4:	1c78      	adds	r0, r7, #1
 8000bd6:	d1d6      	bne.n	8000b86 <_vfiprintf_r+0x19a>
 8000bd8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bda:	07d9      	lsls	r1, r3, #31
 8000bdc:	d405      	bmi.n	8000bea <_vfiprintf_r+0x1fe>
 8000bde:	89ab      	ldrh	r3, [r5, #12]
 8000be0:	059a      	lsls	r2, r3, #22
 8000be2:	d402      	bmi.n	8000bea <_vfiprintf_r+0x1fe>
 8000be4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000be6:	f7ff fddf 	bl	80007a8 <__retarget_lock_release_recursive>
 8000bea:	89ab      	ldrh	r3, [r5, #12]
 8000bec:	065b      	lsls	r3, r3, #25
 8000bee:	f53f af1f 	bmi.w	8000a30 <_vfiprintf_r+0x44>
 8000bf2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000bf4:	e71e      	b.n	8000a34 <_vfiprintf_r+0x48>
 8000bf6:	ab03      	add	r3, sp, #12
 8000bf8:	9300      	str	r3, [sp, #0]
 8000bfa:	462a      	mov	r2, r5
 8000bfc:	4b06      	ldr	r3, [pc, #24]	@ (8000c18 <_vfiprintf_r+0x22c>)
 8000bfe:	a904      	add	r1, sp, #16
 8000c00:	4630      	mov	r0, r6
 8000c02:	f000 f879 	bl	8000cf8 <_printf_i>
 8000c06:	e7e4      	b.n	8000bd2 <_vfiprintf_r+0x1e6>
 8000c08:	080012f9 	.word	0x080012f9
 8000c0c:	080012ff 	.word	0x080012ff
 8000c10:	08001303 	.word	0x08001303
 8000c14:	00000000 	.word	0x00000000
 8000c18:	080009c7 	.word	0x080009c7

08000c1c <_printf_common>:
 8000c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c20:	4616      	mov	r6, r2
 8000c22:	4698      	mov	r8, r3
 8000c24:	688a      	ldr	r2, [r1, #8]
 8000c26:	690b      	ldr	r3, [r1, #16]
 8000c28:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000c2c:	4293      	cmp	r3, r2
 8000c2e:	bfb8      	it	lt
 8000c30:	4613      	movlt	r3, r2
 8000c32:	6033      	str	r3, [r6, #0]
 8000c34:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c38:	4607      	mov	r7, r0
 8000c3a:	460c      	mov	r4, r1
 8000c3c:	b10a      	cbz	r2, 8000c42 <_printf_common+0x26>
 8000c3e:	3301      	adds	r3, #1
 8000c40:	6033      	str	r3, [r6, #0]
 8000c42:	6823      	ldr	r3, [r4, #0]
 8000c44:	0699      	lsls	r1, r3, #26
 8000c46:	bf42      	ittt	mi
 8000c48:	6833      	ldrmi	r3, [r6, #0]
 8000c4a:	3302      	addmi	r3, #2
 8000c4c:	6033      	strmi	r3, [r6, #0]
 8000c4e:	6825      	ldr	r5, [r4, #0]
 8000c50:	f015 0506 	ands.w	r5, r5, #6
 8000c54:	d106      	bne.n	8000c64 <_printf_common+0x48>
 8000c56:	f104 0a19 	add.w	sl, r4, #25
 8000c5a:	68e3      	ldr	r3, [r4, #12]
 8000c5c:	6832      	ldr	r2, [r6, #0]
 8000c5e:	1a9b      	subs	r3, r3, r2
 8000c60:	42ab      	cmp	r3, r5
 8000c62:	dc26      	bgt.n	8000cb2 <_printf_common+0x96>
 8000c64:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c68:	6822      	ldr	r2, [r4, #0]
 8000c6a:	3b00      	subs	r3, #0
 8000c6c:	bf18      	it	ne
 8000c6e:	2301      	movne	r3, #1
 8000c70:	0692      	lsls	r2, r2, #26
 8000c72:	d42b      	bmi.n	8000ccc <_printf_common+0xb0>
 8000c74:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c78:	4641      	mov	r1, r8
 8000c7a:	4638      	mov	r0, r7
 8000c7c:	47c8      	blx	r9
 8000c7e:	3001      	adds	r0, #1
 8000c80:	d01e      	beq.n	8000cc0 <_printf_common+0xa4>
 8000c82:	6823      	ldr	r3, [r4, #0]
 8000c84:	6922      	ldr	r2, [r4, #16]
 8000c86:	f003 0306 	and.w	r3, r3, #6
 8000c8a:	2b04      	cmp	r3, #4
 8000c8c:	bf02      	ittt	eq
 8000c8e:	68e5      	ldreq	r5, [r4, #12]
 8000c90:	6833      	ldreq	r3, [r6, #0]
 8000c92:	1aed      	subeq	r5, r5, r3
 8000c94:	68a3      	ldr	r3, [r4, #8]
 8000c96:	bf0c      	ite	eq
 8000c98:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c9c:	2500      	movne	r5, #0
 8000c9e:	4293      	cmp	r3, r2
 8000ca0:	bfc4      	itt	gt
 8000ca2:	1a9b      	subgt	r3, r3, r2
 8000ca4:	18ed      	addgt	r5, r5, r3
 8000ca6:	2600      	movs	r6, #0
 8000ca8:	341a      	adds	r4, #26
 8000caa:	42b5      	cmp	r5, r6
 8000cac:	d11a      	bne.n	8000ce4 <_printf_common+0xc8>
 8000cae:	2000      	movs	r0, #0
 8000cb0:	e008      	b.n	8000cc4 <_printf_common+0xa8>
 8000cb2:	2301      	movs	r3, #1
 8000cb4:	4652      	mov	r2, sl
 8000cb6:	4641      	mov	r1, r8
 8000cb8:	4638      	mov	r0, r7
 8000cba:	47c8      	blx	r9
 8000cbc:	3001      	adds	r0, #1
 8000cbe:	d103      	bne.n	8000cc8 <_printf_common+0xac>
 8000cc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc8:	3501      	adds	r5, #1
 8000cca:	e7c6      	b.n	8000c5a <_printf_common+0x3e>
 8000ccc:	18e1      	adds	r1, r4, r3
 8000cce:	1c5a      	adds	r2, r3, #1
 8000cd0:	2030      	movs	r0, #48	@ 0x30
 8000cd2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000cd6:	4422      	add	r2, r4
 8000cd8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000cdc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000ce0:	3302      	adds	r3, #2
 8000ce2:	e7c7      	b.n	8000c74 <_printf_common+0x58>
 8000ce4:	2301      	movs	r3, #1
 8000ce6:	4622      	mov	r2, r4
 8000ce8:	4641      	mov	r1, r8
 8000cea:	4638      	mov	r0, r7
 8000cec:	47c8      	blx	r9
 8000cee:	3001      	adds	r0, #1
 8000cf0:	d0e6      	beq.n	8000cc0 <_printf_common+0xa4>
 8000cf2:	3601      	adds	r6, #1
 8000cf4:	e7d9      	b.n	8000caa <_printf_common+0x8e>
	...

08000cf8 <_printf_i>:
 8000cf8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cfc:	7e0f      	ldrb	r7, [r1, #24]
 8000cfe:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000d00:	2f78      	cmp	r7, #120	@ 0x78
 8000d02:	4691      	mov	r9, r2
 8000d04:	4680      	mov	r8, r0
 8000d06:	460c      	mov	r4, r1
 8000d08:	469a      	mov	sl, r3
 8000d0a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000d0e:	d807      	bhi.n	8000d20 <_printf_i+0x28>
 8000d10:	2f62      	cmp	r7, #98	@ 0x62
 8000d12:	d80a      	bhi.n	8000d2a <_printf_i+0x32>
 8000d14:	2f00      	cmp	r7, #0
 8000d16:	f000 80d1 	beq.w	8000ebc <_printf_i+0x1c4>
 8000d1a:	2f58      	cmp	r7, #88	@ 0x58
 8000d1c:	f000 80b8 	beq.w	8000e90 <_printf_i+0x198>
 8000d20:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d24:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000d28:	e03a      	b.n	8000da0 <_printf_i+0xa8>
 8000d2a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000d2e:	2b15      	cmp	r3, #21
 8000d30:	d8f6      	bhi.n	8000d20 <_printf_i+0x28>
 8000d32:	a101      	add	r1, pc, #4	@ (adr r1, 8000d38 <_printf_i+0x40>)
 8000d34:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d38:	08000d91 	.word	0x08000d91
 8000d3c:	08000da5 	.word	0x08000da5
 8000d40:	08000d21 	.word	0x08000d21
 8000d44:	08000d21 	.word	0x08000d21
 8000d48:	08000d21 	.word	0x08000d21
 8000d4c:	08000d21 	.word	0x08000d21
 8000d50:	08000da5 	.word	0x08000da5
 8000d54:	08000d21 	.word	0x08000d21
 8000d58:	08000d21 	.word	0x08000d21
 8000d5c:	08000d21 	.word	0x08000d21
 8000d60:	08000d21 	.word	0x08000d21
 8000d64:	08000ea3 	.word	0x08000ea3
 8000d68:	08000dcf 	.word	0x08000dcf
 8000d6c:	08000e5d 	.word	0x08000e5d
 8000d70:	08000d21 	.word	0x08000d21
 8000d74:	08000d21 	.word	0x08000d21
 8000d78:	08000ec5 	.word	0x08000ec5
 8000d7c:	08000d21 	.word	0x08000d21
 8000d80:	08000dcf 	.word	0x08000dcf
 8000d84:	08000d21 	.word	0x08000d21
 8000d88:	08000d21 	.word	0x08000d21
 8000d8c:	08000e65 	.word	0x08000e65
 8000d90:	6833      	ldr	r3, [r6, #0]
 8000d92:	1d1a      	adds	r2, r3, #4
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	6032      	str	r2, [r6, #0]
 8000d98:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d9c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000da0:	2301      	movs	r3, #1
 8000da2:	e09c      	b.n	8000ede <_printf_i+0x1e6>
 8000da4:	6833      	ldr	r3, [r6, #0]
 8000da6:	6820      	ldr	r0, [r4, #0]
 8000da8:	1d19      	adds	r1, r3, #4
 8000daa:	6031      	str	r1, [r6, #0]
 8000dac:	0606      	lsls	r6, r0, #24
 8000dae:	d501      	bpl.n	8000db4 <_printf_i+0xbc>
 8000db0:	681d      	ldr	r5, [r3, #0]
 8000db2:	e003      	b.n	8000dbc <_printf_i+0xc4>
 8000db4:	0645      	lsls	r5, r0, #25
 8000db6:	d5fb      	bpl.n	8000db0 <_printf_i+0xb8>
 8000db8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000dbc:	2d00      	cmp	r5, #0
 8000dbe:	da03      	bge.n	8000dc8 <_printf_i+0xd0>
 8000dc0:	232d      	movs	r3, #45	@ 0x2d
 8000dc2:	426d      	negs	r5, r5
 8000dc4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000dc8:	4858      	ldr	r0, [pc, #352]	@ (8000f2c <_printf_i+0x234>)
 8000dca:	230a      	movs	r3, #10
 8000dcc:	e011      	b.n	8000df2 <_printf_i+0xfa>
 8000dce:	6821      	ldr	r1, [r4, #0]
 8000dd0:	6833      	ldr	r3, [r6, #0]
 8000dd2:	0608      	lsls	r0, r1, #24
 8000dd4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000dd8:	d402      	bmi.n	8000de0 <_printf_i+0xe8>
 8000dda:	0649      	lsls	r1, r1, #25
 8000ddc:	bf48      	it	mi
 8000dde:	b2ad      	uxthmi	r5, r5
 8000de0:	2f6f      	cmp	r7, #111	@ 0x6f
 8000de2:	4852      	ldr	r0, [pc, #328]	@ (8000f2c <_printf_i+0x234>)
 8000de4:	6033      	str	r3, [r6, #0]
 8000de6:	bf14      	ite	ne
 8000de8:	230a      	movne	r3, #10
 8000dea:	2308      	moveq	r3, #8
 8000dec:	2100      	movs	r1, #0
 8000dee:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000df2:	6866      	ldr	r6, [r4, #4]
 8000df4:	60a6      	str	r6, [r4, #8]
 8000df6:	2e00      	cmp	r6, #0
 8000df8:	db05      	blt.n	8000e06 <_printf_i+0x10e>
 8000dfa:	6821      	ldr	r1, [r4, #0]
 8000dfc:	432e      	orrs	r6, r5
 8000dfe:	f021 0104 	bic.w	r1, r1, #4
 8000e02:	6021      	str	r1, [r4, #0]
 8000e04:	d04b      	beq.n	8000e9e <_printf_i+0x1a6>
 8000e06:	4616      	mov	r6, r2
 8000e08:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e0c:	fb03 5711 	mls	r7, r3, r1, r5
 8000e10:	5dc7      	ldrb	r7, [r0, r7]
 8000e12:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e16:	462f      	mov	r7, r5
 8000e18:	42bb      	cmp	r3, r7
 8000e1a:	460d      	mov	r5, r1
 8000e1c:	d9f4      	bls.n	8000e08 <_printf_i+0x110>
 8000e1e:	2b08      	cmp	r3, #8
 8000e20:	d10b      	bne.n	8000e3a <_printf_i+0x142>
 8000e22:	6823      	ldr	r3, [r4, #0]
 8000e24:	07df      	lsls	r7, r3, #31
 8000e26:	d508      	bpl.n	8000e3a <_printf_i+0x142>
 8000e28:	6923      	ldr	r3, [r4, #16]
 8000e2a:	6861      	ldr	r1, [r4, #4]
 8000e2c:	4299      	cmp	r1, r3
 8000e2e:	bfde      	ittt	le
 8000e30:	2330      	movle	r3, #48	@ 0x30
 8000e32:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e36:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e3a:	1b92      	subs	r2, r2, r6
 8000e3c:	6122      	str	r2, [r4, #16]
 8000e3e:	f8cd a000 	str.w	sl, [sp]
 8000e42:	464b      	mov	r3, r9
 8000e44:	aa03      	add	r2, sp, #12
 8000e46:	4621      	mov	r1, r4
 8000e48:	4640      	mov	r0, r8
 8000e4a:	f7ff fee7 	bl	8000c1c <_printf_common>
 8000e4e:	3001      	adds	r0, #1
 8000e50:	d14a      	bne.n	8000ee8 <_printf_i+0x1f0>
 8000e52:	f04f 30ff 	mov.w	r0, #4294967295
 8000e56:	b004      	add	sp, #16
 8000e58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5c:	6823      	ldr	r3, [r4, #0]
 8000e5e:	f043 0320 	orr.w	r3, r3, #32
 8000e62:	6023      	str	r3, [r4, #0]
 8000e64:	4832      	ldr	r0, [pc, #200]	@ (8000f30 <_printf_i+0x238>)
 8000e66:	2778      	movs	r7, #120	@ 0x78
 8000e68:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e6c:	6823      	ldr	r3, [r4, #0]
 8000e6e:	6831      	ldr	r1, [r6, #0]
 8000e70:	061f      	lsls	r7, r3, #24
 8000e72:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e76:	d402      	bmi.n	8000e7e <_printf_i+0x186>
 8000e78:	065f      	lsls	r7, r3, #25
 8000e7a:	bf48      	it	mi
 8000e7c:	b2ad      	uxthmi	r5, r5
 8000e7e:	6031      	str	r1, [r6, #0]
 8000e80:	07d9      	lsls	r1, r3, #31
 8000e82:	bf44      	itt	mi
 8000e84:	f043 0320 	orrmi.w	r3, r3, #32
 8000e88:	6023      	strmi	r3, [r4, #0]
 8000e8a:	b11d      	cbz	r5, 8000e94 <_printf_i+0x19c>
 8000e8c:	2310      	movs	r3, #16
 8000e8e:	e7ad      	b.n	8000dec <_printf_i+0xf4>
 8000e90:	4826      	ldr	r0, [pc, #152]	@ (8000f2c <_printf_i+0x234>)
 8000e92:	e7e9      	b.n	8000e68 <_printf_i+0x170>
 8000e94:	6823      	ldr	r3, [r4, #0]
 8000e96:	f023 0320 	bic.w	r3, r3, #32
 8000e9a:	6023      	str	r3, [r4, #0]
 8000e9c:	e7f6      	b.n	8000e8c <_printf_i+0x194>
 8000e9e:	4616      	mov	r6, r2
 8000ea0:	e7bd      	b.n	8000e1e <_printf_i+0x126>
 8000ea2:	6833      	ldr	r3, [r6, #0]
 8000ea4:	6825      	ldr	r5, [r4, #0]
 8000ea6:	6961      	ldr	r1, [r4, #20]
 8000ea8:	1d18      	adds	r0, r3, #4
 8000eaa:	6030      	str	r0, [r6, #0]
 8000eac:	062e      	lsls	r6, r5, #24
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	d501      	bpl.n	8000eb6 <_printf_i+0x1be>
 8000eb2:	6019      	str	r1, [r3, #0]
 8000eb4:	e002      	b.n	8000ebc <_printf_i+0x1c4>
 8000eb6:	0668      	lsls	r0, r5, #25
 8000eb8:	d5fb      	bpl.n	8000eb2 <_printf_i+0x1ba>
 8000eba:	8019      	strh	r1, [r3, #0]
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	6123      	str	r3, [r4, #16]
 8000ec0:	4616      	mov	r6, r2
 8000ec2:	e7bc      	b.n	8000e3e <_printf_i+0x146>
 8000ec4:	6833      	ldr	r3, [r6, #0]
 8000ec6:	1d1a      	adds	r2, r3, #4
 8000ec8:	6032      	str	r2, [r6, #0]
 8000eca:	681e      	ldr	r6, [r3, #0]
 8000ecc:	6862      	ldr	r2, [r4, #4]
 8000ece:	2100      	movs	r1, #0
 8000ed0:	4630      	mov	r0, r6
 8000ed2:	f7ff f97d 	bl	80001d0 <memchr>
 8000ed6:	b108      	cbz	r0, 8000edc <_printf_i+0x1e4>
 8000ed8:	1b80      	subs	r0, r0, r6
 8000eda:	6060      	str	r0, [r4, #4]
 8000edc:	6863      	ldr	r3, [r4, #4]
 8000ede:	6123      	str	r3, [r4, #16]
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000ee6:	e7aa      	b.n	8000e3e <_printf_i+0x146>
 8000ee8:	6923      	ldr	r3, [r4, #16]
 8000eea:	4632      	mov	r2, r6
 8000eec:	4649      	mov	r1, r9
 8000eee:	4640      	mov	r0, r8
 8000ef0:	47d0      	blx	sl
 8000ef2:	3001      	adds	r0, #1
 8000ef4:	d0ad      	beq.n	8000e52 <_printf_i+0x15a>
 8000ef6:	6823      	ldr	r3, [r4, #0]
 8000ef8:	079b      	lsls	r3, r3, #30
 8000efa:	d413      	bmi.n	8000f24 <_printf_i+0x22c>
 8000efc:	68e0      	ldr	r0, [r4, #12]
 8000efe:	9b03      	ldr	r3, [sp, #12]
 8000f00:	4298      	cmp	r0, r3
 8000f02:	bfb8      	it	lt
 8000f04:	4618      	movlt	r0, r3
 8000f06:	e7a6      	b.n	8000e56 <_printf_i+0x15e>
 8000f08:	2301      	movs	r3, #1
 8000f0a:	4632      	mov	r2, r6
 8000f0c:	4649      	mov	r1, r9
 8000f0e:	4640      	mov	r0, r8
 8000f10:	47d0      	blx	sl
 8000f12:	3001      	adds	r0, #1
 8000f14:	d09d      	beq.n	8000e52 <_printf_i+0x15a>
 8000f16:	3501      	adds	r5, #1
 8000f18:	68e3      	ldr	r3, [r4, #12]
 8000f1a:	9903      	ldr	r1, [sp, #12]
 8000f1c:	1a5b      	subs	r3, r3, r1
 8000f1e:	42ab      	cmp	r3, r5
 8000f20:	dcf2      	bgt.n	8000f08 <_printf_i+0x210>
 8000f22:	e7eb      	b.n	8000efc <_printf_i+0x204>
 8000f24:	2500      	movs	r5, #0
 8000f26:	f104 0619 	add.w	r6, r4, #25
 8000f2a:	e7f5      	b.n	8000f18 <_printf_i+0x220>
 8000f2c:	0800130a 	.word	0x0800130a
 8000f30:	0800131b 	.word	0x0800131b

08000f34 <__sflush_r>:
 8000f34:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f3a:	0716      	lsls	r6, r2, #28
 8000f3c:	4605      	mov	r5, r0
 8000f3e:	460c      	mov	r4, r1
 8000f40:	d454      	bmi.n	8000fec <__sflush_r+0xb8>
 8000f42:	684b      	ldr	r3, [r1, #4]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	dc02      	bgt.n	8000f4e <__sflush_r+0x1a>
 8000f48:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000f4a:	2b00      	cmp	r3, #0
 8000f4c:	dd48      	ble.n	8000fe0 <__sflush_r+0xac>
 8000f4e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f50:	2e00      	cmp	r6, #0
 8000f52:	d045      	beq.n	8000fe0 <__sflush_r+0xac>
 8000f54:	2300      	movs	r3, #0
 8000f56:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000f5a:	682f      	ldr	r7, [r5, #0]
 8000f5c:	6a21      	ldr	r1, [r4, #32]
 8000f5e:	602b      	str	r3, [r5, #0]
 8000f60:	d030      	beq.n	8000fc4 <__sflush_r+0x90>
 8000f62:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f64:	89a3      	ldrh	r3, [r4, #12]
 8000f66:	0759      	lsls	r1, r3, #29
 8000f68:	d505      	bpl.n	8000f76 <__sflush_r+0x42>
 8000f6a:	6863      	ldr	r3, [r4, #4]
 8000f6c:	1ad2      	subs	r2, r2, r3
 8000f6e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f70:	b10b      	cbz	r3, 8000f76 <__sflush_r+0x42>
 8000f72:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f74:	1ad2      	subs	r2, r2, r3
 8000f76:	2300      	movs	r3, #0
 8000f78:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f7a:	6a21      	ldr	r1, [r4, #32]
 8000f7c:	4628      	mov	r0, r5
 8000f7e:	47b0      	blx	r6
 8000f80:	1c43      	adds	r3, r0, #1
 8000f82:	89a3      	ldrh	r3, [r4, #12]
 8000f84:	d106      	bne.n	8000f94 <__sflush_r+0x60>
 8000f86:	6829      	ldr	r1, [r5, #0]
 8000f88:	291d      	cmp	r1, #29
 8000f8a:	d82b      	bhi.n	8000fe4 <__sflush_r+0xb0>
 8000f8c:	4a28      	ldr	r2, [pc, #160]	@ (8001030 <__sflush_r+0xfc>)
 8000f8e:	40ca      	lsrs	r2, r1
 8000f90:	07d6      	lsls	r6, r2, #31
 8000f92:	d527      	bpl.n	8000fe4 <__sflush_r+0xb0>
 8000f94:	2200      	movs	r2, #0
 8000f96:	6062      	str	r2, [r4, #4]
 8000f98:	04d9      	lsls	r1, r3, #19
 8000f9a:	6922      	ldr	r2, [r4, #16]
 8000f9c:	6022      	str	r2, [r4, #0]
 8000f9e:	d504      	bpl.n	8000faa <__sflush_r+0x76>
 8000fa0:	1c42      	adds	r2, r0, #1
 8000fa2:	d101      	bne.n	8000fa8 <__sflush_r+0x74>
 8000fa4:	682b      	ldr	r3, [r5, #0]
 8000fa6:	b903      	cbnz	r3, 8000faa <__sflush_r+0x76>
 8000fa8:	6560      	str	r0, [r4, #84]	@ 0x54
 8000faa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000fac:	602f      	str	r7, [r5, #0]
 8000fae:	b1b9      	cbz	r1, 8000fe0 <__sflush_r+0xac>
 8000fb0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000fb4:	4299      	cmp	r1, r3
 8000fb6:	d002      	beq.n	8000fbe <__sflush_r+0x8a>
 8000fb8:	4628      	mov	r0, r5
 8000fba:	f7ff fbf7 	bl	80007ac <_free_r>
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	6363      	str	r3, [r4, #52]	@ 0x34
 8000fc2:	e00d      	b.n	8000fe0 <__sflush_r+0xac>
 8000fc4:	2301      	movs	r3, #1
 8000fc6:	4628      	mov	r0, r5
 8000fc8:	47b0      	blx	r6
 8000fca:	4602      	mov	r2, r0
 8000fcc:	1c50      	adds	r0, r2, #1
 8000fce:	d1c9      	bne.n	8000f64 <__sflush_r+0x30>
 8000fd0:	682b      	ldr	r3, [r5, #0]
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	d0c6      	beq.n	8000f64 <__sflush_r+0x30>
 8000fd6:	2b1d      	cmp	r3, #29
 8000fd8:	d001      	beq.n	8000fde <__sflush_r+0xaa>
 8000fda:	2b16      	cmp	r3, #22
 8000fdc:	d11d      	bne.n	800101a <__sflush_r+0xe6>
 8000fde:	602f      	str	r7, [r5, #0]
 8000fe0:	2000      	movs	r0, #0
 8000fe2:	e021      	b.n	8001028 <__sflush_r+0xf4>
 8000fe4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fe8:	b21b      	sxth	r3, r3
 8000fea:	e01a      	b.n	8001022 <__sflush_r+0xee>
 8000fec:	690f      	ldr	r7, [r1, #16]
 8000fee:	2f00      	cmp	r7, #0
 8000ff0:	d0f6      	beq.n	8000fe0 <__sflush_r+0xac>
 8000ff2:	0793      	lsls	r3, r2, #30
 8000ff4:	680e      	ldr	r6, [r1, #0]
 8000ff6:	bf08      	it	eq
 8000ff8:	694b      	ldreq	r3, [r1, #20]
 8000ffa:	600f      	str	r7, [r1, #0]
 8000ffc:	bf18      	it	ne
 8000ffe:	2300      	movne	r3, #0
 8001000:	1bf6      	subs	r6, r6, r7
 8001002:	608b      	str	r3, [r1, #8]
 8001004:	2e00      	cmp	r6, #0
 8001006:	ddeb      	ble.n	8000fe0 <__sflush_r+0xac>
 8001008:	6a21      	ldr	r1, [r4, #32]
 800100a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800100e:	4633      	mov	r3, r6
 8001010:	463a      	mov	r2, r7
 8001012:	4628      	mov	r0, r5
 8001014:	47e0      	blx	ip
 8001016:	2800      	cmp	r0, #0
 8001018:	dc07      	bgt.n	800102a <__sflush_r+0xf6>
 800101a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800101e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001022:	81a3      	strh	r3, [r4, #12]
 8001024:	f04f 30ff 	mov.w	r0, #4294967295
 8001028:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800102a:	4407      	add	r7, r0
 800102c:	1a36      	subs	r6, r6, r0
 800102e:	e7e9      	b.n	8001004 <__sflush_r+0xd0>
 8001030:	20400001 	.word	0x20400001

08001034 <_fflush_r>:
 8001034:	b538      	push	{r3, r4, r5, lr}
 8001036:	690b      	ldr	r3, [r1, #16]
 8001038:	4605      	mov	r5, r0
 800103a:	460c      	mov	r4, r1
 800103c:	b913      	cbnz	r3, 8001044 <_fflush_r+0x10>
 800103e:	2500      	movs	r5, #0
 8001040:	4628      	mov	r0, r5
 8001042:	bd38      	pop	{r3, r4, r5, pc}
 8001044:	b118      	cbz	r0, 800104e <_fflush_r+0x1a>
 8001046:	6a03      	ldr	r3, [r0, #32]
 8001048:	b90b      	cbnz	r3, 800104e <_fflush_r+0x1a>
 800104a:	f7ff faa7 	bl	800059c <__sinit>
 800104e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001052:	2b00      	cmp	r3, #0
 8001054:	d0f3      	beq.n	800103e <_fflush_r+0xa>
 8001056:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001058:	07d0      	lsls	r0, r2, #31
 800105a:	d404      	bmi.n	8001066 <_fflush_r+0x32>
 800105c:	0599      	lsls	r1, r3, #22
 800105e:	d402      	bmi.n	8001066 <_fflush_r+0x32>
 8001060:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001062:	f7ff fba0 	bl	80007a6 <__retarget_lock_acquire_recursive>
 8001066:	4628      	mov	r0, r5
 8001068:	4621      	mov	r1, r4
 800106a:	f7ff ff63 	bl	8000f34 <__sflush_r>
 800106e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001070:	07da      	lsls	r2, r3, #31
 8001072:	4605      	mov	r5, r0
 8001074:	d4e4      	bmi.n	8001040 <_fflush_r+0xc>
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	059b      	lsls	r3, r3, #22
 800107a:	d4e1      	bmi.n	8001040 <_fflush_r+0xc>
 800107c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800107e:	f7ff fb93 	bl	80007a8 <__retarget_lock_release_recursive>
 8001082:	e7dd      	b.n	8001040 <_fflush_r+0xc>

08001084 <__swbuf_r>:
 8001084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001086:	460e      	mov	r6, r1
 8001088:	4614      	mov	r4, r2
 800108a:	4605      	mov	r5, r0
 800108c:	b118      	cbz	r0, 8001096 <__swbuf_r+0x12>
 800108e:	6a03      	ldr	r3, [r0, #32]
 8001090:	b90b      	cbnz	r3, 8001096 <__swbuf_r+0x12>
 8001092:	f7ff fa83 	bl	800059c <__sinit>
 8001096:	69a3      	ldr	r3, [r4, #24]
 8001098:	60a3      	str	r3, [r4, #8]
 800109a:	89a3      	ldrh	r3, [r4, #12]
 800109c:	071a      	lsls	r2, r3, #28
 800109e:	d501      	bpl.n	80010a4 <__swbuf_r+0x20>
 80010a0:	6923      	ldr	r3, [r4, #16]
 80010a2:	b943      	cbnz	r3, 80010b6 <__swbuf_r+0x32>
 80010a4:	4621      	mov	r1, r4
 80010a6:	4628      	mov	r0, r5
 80010a8:	f000 f82a 	bl	8001100 <__swsetup_r>
 80010ac:	b118      	cbz	r0, 80010b6 <__swbuf_r+0x32>
 80010ae:	f04f 37ff 	mov.w	r7, #4294967295
 80010b2:	4638      	mov	r0, r7
 80010b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010b6:	6823      	ldr	r3, [r4, #0]
 80010b8:	6922      	ldr	r2, [r4, #16]
 80010ba:	1a98      	subs	r0, r3, r2
 80010bc:	6963      	ldr	r3, [r4, #20]
 80010be:	b2f6      	uxtb	r6, r6
 80010c0:	4283      	cmp	r3, r0
 80010c2:	4637      	mov	r7, r6
 80010c4:	dc05      	bgt.n	80010d2 <__swbuf_r+0x4e>
 80010c6:	4621      	mov	r1, r4
 80010c8:	4628      	mov	r0, r5
 80010ca:	f7ff ffb3 	bl	8001034 <_fflush_r>
 80010ce:	2800      	cmp	r0, #0
 80010d0:	d1ed      	bne.n	80010ae <__swbuf_r+0x2a>
 80010d2:	68a3      	ldr	r3, [r4, #8]
 80010d4:	3b01      	subs	r3, #1
 80010d6:	60a3      	str	r3, [r4, #8]
 80010d8:	6823      	ldr	r3, [r4, #0]
 80010da:	1c5a      	adds	r2, r3, #1
 80010dc:	6022      	str	r2, [r4, #0]
 80010de:	701e      	strb	r6, [r3, #0]
 80010e0:	6962      	ldr	r2, [r4, #20]
 80010e2:	1c43      	adds	r3, r0, #1
 80010e4:	429a      	cmp	r2, r3
 80010e6:	d004      	beq.n	80010f2 <__swbuf_r+0x6e>
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	07db      	lsls	r3, r3, #31
 80010ec:	d5e1      	bpl.n	80010b2 <__swbuf_r+0x2e>
 80010ee:	2e0a      	cmp	r6, #10
 80010f0:	d1df      	bne.n	80010b2 <__swbuf_r+0x2e>
 80010f2:	4621      	mov	r1, r4
 80010f4:	4628      	mov	r0, r5
 80010f6:	f7ff ff9d 	bl	8001034 <_fflush_r>
 80010fa:	2800      	cmp	r0, #0
 80010fc:	d0d9      	beq.n	80010b2 <__swbuf_r+0x2e>
 80010fe:	e7d6      	b.n	80010ae <__swbuf_r+0x2a>

08001100 <__swsetup_r>:
 8001100:	b538      	push	{r3, r4, r5, lr}
 8001102:	4b29      	ldr	r3, [pc, #164]	@ (80011a8 <__swsetup_r+0xa8>)
 8001104:	4605      	mov	r5, r0
 8001106:	6818      	ldr	r0, [r3, #0]
 8001108:	460c      	mov	r4, r1
 800110a:	b118      	cbz	r0, 8001114 <__swsetup_r+0x14>
 800110c:	6a03      	ldr	r3, [r0, #32]
 800110e:	b90b      	cbnz	r3, 8001114 <__swsetup_r+0x14>
 8001110:	f7ff fa44 	bl	800059c <__sinit>
 8001114:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001118:	0719      	lsls	r1, r3, #28
 800111a:	d422      	bmi.n	8001162 <__swsetup_r+0x62>
 800111c:	06da      	lsls	r2, r3, #27
 800111e:	d407      	bmi.n	8001130 <__swsetup_r+0x30>
 8001120:	2209      	movs	r2, #9
 8001122:	602a      	str	r2, [r5, #0]
 8001124:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001128:	81a3      	strh	r3, [r4, #12]
 800112a:	f04f 30ff 	mov.w	r0, #4294967295
 800112e:	e033      	b.n	8001198 <__swsetup_r+0x98>
 8001130:	0758      	lsls	r0, r3, #29
 8001132:	d512      	bpl.n	800115a <__swsetup_r+0x5a>
 8001134:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001136:	b141      	cbz	r1, 800114a <__swsetup_r+0x4a>
 8001138:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800113c:	4299      	cmp	r1, r3
 800113e:	d002      	beq.n	8001146 <__swsetup_r+0x46>
 8001140:	4628      	mov	r0, r5
 8001142:	f7ff fb33 	bl	80007ac <_free_r>
 8001146:	2300      	movs	r3, #0
 8001148:	6363      	str	r3, [r4, #52]	@ 0x34
 800114a:	89a3      	ldrh	r3, [r4, #12]
 800114c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001150:	81a3      	strh	r3, [r4, #12]
 8001152:	2300      	movs	r3, #0
 8001154:	6063      	str	r3, [r4, #4]
 8001156:	6923      	ldr	r3, [r4, #16]
 8001158:	6023      	str	r3, [r4, #0]
 800115a:	89a3      	ldrh	r3, [r4, #12]
 800115c:	f043 0308 	orr.w	r3, r3, #8
 8001160:	81a3      	strh	r3, [r4, #12]
 8001162:	6923      	ldr	r3, [r4, #16]
 8001164:	b94b      	cbnz	r3, 800117a <__swsetup_r+0x7a>
 8001166:	89a3      	ldrh	r3, [r4, #12]
 8001168:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800116c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001170:	d003      	beq.n	800117a <__swsetup_r+0x7a>
 8001172:	4621      	mov	r1, r4
 8001174:	4628      	mov	r0, r5
 8001176:	f000 f84f 	bl	8001218 <__smakebuf_r>
 800117a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800117e:	f013 0201 	ands.w	r2, r3, #1
 8001182:	d00a      	beq.n	800119a <__swsetup_r+0x9a>
 8001184:	2200      	movs	r2, #0
 8001186:	60a2      	str	r2, [r4, #8]
 8001188:	6962      	ldr	r2, [r4, #20]
 800118a:	4252      	negs	r2, r2
 800118c:	61a2      	str	r2, [r4, #24]
 800118e:	6922      	ldr	r2, [r4, #16]
 8001190:	b942      	cbnz	r2, 80011a4 <__swsetup_r+0xa4>
 8001192:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001196:	d1c5      	bne.n	8001124 <__swsetup_r+0x24>
 8001198:	bd38      	pop	{r3, r4, r5, pc}
 800119a:	0799      	lsls	r1, r3, #30
 800119c:	bf58      	it	pl
 800119e:	6962      	ldrpl	r2, [r4, #20]
 80011a0:	60a2      	str	r2, [r4, #8]
 80011a2:	e7f4      	b.n	800118e <__swsetup_r+0x8e>
 80011a4:	2000      	movs	r0, #0
 80011a6:	e7f7      	b.n	8001198 <__swsetup_r+0x98>
 80011a8:	20000014 	.word	0x20000014

080011ac <_sbrk_r>:
 80011ac:	b538      	push	{r3, r4, r5, lr}
 80011ae:	4d06      	ldr	r5, [pc, #24]	@ (80011c8 <_sbrk_r+0x1c>)
 80011b0:	2300      	movs	r3, #0
 80011b2:	4604      	mov	r4, r0
 80011b4:	4608      	mov	r0, r1
 80011b6:	602b      	str	r3, [r5, #0]
 80011b8:	f7ff f904 	bl	80003c4 <_sbrk>
 80011bc:	1c43      	adds	r3, r0, #1
 80011be:	d102      	bne.n	80011c6 <_sbrk_r+0x1a>
 80011c0:	682b      	ldr	r3, [r5, #0]
 80011c2:	b103      	cbz	r3, 80011c6 <_sbrk_r+0x1a>
 80011c4:	6023      	str	r3, [r4, #0]
 80011c6:	bd38      	pop	{r3, r4, r5, pc}
 80011c8:	200001c4 	.word	0x200001c4

080011cc <__swhatbuf_r>:
 80011cc:	b570      	push	{r4, r5, r6, lr}
 80011ce:	460c      	mov	r4, r1
 80011d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011d4:	2900      	cmp	r1, #0
 80011d6:	b096      	sub	sp, #88	@ 0x58
 80011d8:	4615      	mov	r5, r2
 80011da:	461e      	mov	r6, r3
 80011dc:	da0d      	bge.n	80011fa <__swhatbuf_r+0x2e>
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80011e4:	f04f 0100 	mov.w	r1, #0
 80011e8:	bf14      	ite	ne
 80011ea:	2340      	movne	r3, #64	@ 0x40
 80011ec:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80011f0:	2000      	movs	r0, #0
 80011f2:	6031      	str	r1, [r6, #0]
 80011f4:	602b      	str	r3, [r5, #0]
 80011f6:	b016      	add	sp, #88	@ 0x58
 80011f8:	bd70      	pop	{r4, r5, r6, pc}
 80011fa:	466a      	mov	r2, sp
 80011fc:	f000 f848 	bl	8001290 <_fstat_r>
 8001200:	2800      	cmp	r0, #0
 8001202:	dbec      	blt.n	80011de <__swhatbuf_r+0x12>
 8001204:	9901      	ldr	r1, [sp, #4]
 8001206:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800120a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800120e:	4259      	negs	r1, r3
 8001210:	4159      	adcs	r1, r3
 8001212:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001216:	e7eb      	b.n	80011f0 <__swhatbuf_r+0x24>

08001218 <__smakebuf_r>:
 8001218:	898b      	ldrh	r3, [r1, #12]
 800121a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800121c:	079d      	lsls	r5, r3, #30
 800121e:	4606      	mov	r6, r0
 8001220:	460c      	mov	r4, r1
 8001222:	d507      	bpl.n	8001234 <__smakebuf_r+0x1c>
 8001224:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	6123      	str	r3, [r4, #16]
 800122c:	2301      	movs	r3, #1
 800122e:	6163      	str	r3, [r4, #20]
 8001230:	b003      	add	sp, #12
 8001232:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001234:	ab01      	add	r3, sp, #4
 8001236:	466a      	mov	r2, sp
 8001238:	f7ff ffc8 	bl	80011cc <__swhatbuf_r>
 800123c:	9f00      	ldr	r7, [sp, #0]
 800123e:	4605      	mov	r5, r0
 8001240:	4639      	mov	r1, r7
 8001242:	4630      	mov	r0, r6
 8001244:	f7ff fb1e 	bl	8000884 <_malloc_r>
 8001248:	b948      	cbnz	r0, 800125e <__smakebuf_r+0x46>
 800124a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800124e:	059a      	lsls	r2, r3, #22
 8001250:	d4ee      	bmi.n	8001230 <__smakebuf_r+0x18>
 8001252:	f023 0303 	bic.w	r3, r3, #3
 8001256:	f043 0302 	orr.w	r3, r3, #2
 800125a:	81a3      	strh	r3, [r4, #12]
 800125c:	e7e2      	b.n	8001224 <__smakebuf_r+0xc>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	6020      	str	r0, [r4, #0]
 8001262:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001266:	81a3      	strh	r3, [r4, #12]
 8001268:	9b01      	ldr	r3, [sp, #4]
 800126a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800126e:	b15b      	cbz	r3, 8001288 <__smakebuf_r+0x70>
 8001270:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001274:	4630      	mov	r0, r6
 8001276:	f000 f81d 	bl	80012b4 <_isatty_r>
 800127a:	b128      	cbz	r0, 8001288 <__smakebuf_r+0x70>
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	f023 0303 	bic.w	r3, r3, #3
 8001282:	f043 0301 	orr.w	r3, r3, #1
 8001286:	81a3      	strh	r3, [r4, #12]
 8001288:	89a3      	ldrh	r3, [r4, #12]
 800128a:	431d      	orrs	r5, r3
 800128c:	81a5      	strh	r5, [r4, #12]
 800128e:	e7cf      	b.n	8001230 <__smakebuf_r+0x18>

08001290 <_fstat_r>:
 8001290:	b538      	push	{r3, r4, r5, lr}
 8001292:	4d07      	ldr	r5, [pc, #28]	@ (80012b0 <_fstat_r+0x20>)
 8001294:	2300      	movs	r3, #0
 8001296:	4604      	mov	r4, r0
 8001298:	4608      	mov	r0, r1
 800129a:	4611      	mov	r1, r2
 800129c:	602b      	str	r3, [r5, #0]
 800129e:	f7ff f86b 	bl	8000378 <_fstat>
 80012a2:	1c43      	adds	r3, r0, #1
 80012a4:	d102      	bne.n	80012ac <_fstat_r+0x1c>
 80012a6:	682b      	ldr	r3, [r5, #0]
 80012a8:	b103      	cbz	r3, 80012ac <_fstat_r+0x1c>
 80012aa:	6023      	str	r3, [r4, #0]
 80012ac:	bd38      	pop	{r3, r4, r5, pc}
 80012ae:	bf00      	nop
 80012b0:	200001c4 	.word	0x200001c4

080012b4 <_isatty_r>:
 80012b4:	b538      	push	{r3, r4, r5, lr}
 80012b6:	4d06      	ldr	r5, [pc, #24]	@ (80012d0 <_isatty_r+0x1c>)
 80012b8:	2300      	movs	r3, #0
 80012ba:	4604      	mov	r4, r0
 80012bc:	4608      	mov	r0, r1
 80012be:	602b      	str	r3, [r5, #0]
 80012c0:	f7ff f869 	bl	8000396 <_isatty>
 80012c4:	1c43      	adds	r3, r0, #1
 80012c6:	d102      	bne.n	80012ce <_isatty_r+0x1a>
 80012c8:	682b      	ldr	r3, [r5, #0]
 80012ca:	b103      	cbz	r3, 80012ce <_isatty_r+0x1a>
 80012cc:	6023      	str	r3, [r4, #0]
 80012ce:	bd38      	pop	{r3, r4, r5, pc}
 80012d0:	200001c4 	.word	0x200001c4

080012d4 <_init>:
 80012d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012d6:	bf00      	nop
 80012d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012da:	bc08      	pop	{r3}
 80012dc:	469e      	mov	lr, r3
 80012de:	4770      	bx	lr

080012e0 <_fini>:
 80012e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012e2:	bf00      	nop
 80012e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012e6:	bc08      	pop	{r3}
 80012e8:	469e      	mov	lr, r3
 80012ea:	4770      	bx	lr
