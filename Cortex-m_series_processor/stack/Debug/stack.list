
stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011a4  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  08001334  08001334  00002334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001388  08001388  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001388  08001388  00002388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001390  08001390  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001390  08001390  00002390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001394  08001394  00002394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001398  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009ab  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000037f  00000000  00000000  00003a31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00003db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d6  00000000  00000000  00003ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d50  00000000  00000000  00003fbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014b3  00000000  00000000  00006d0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000099b0  00000000  00000000  000081c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011b71  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b80  00000000  00000000  00011bb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000076  00000000  00000000  00012734  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800131c 	.word	0x0800131c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	0800131c 	.word	0x0800131c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <fun_add>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int fun_add(int a,int b,int c,int d){
 8000270:	b480      	push	{r7}
 8000272:	b085      	sub	sp, #20
 8000274:	af00      	add	r7, sp, #0
 8000276:	60f8      	str	r0, [r7, #12]
 8000278:	60b9      	str	r1, [r7, #8]
 800027a:	607a      	str	r2, [r7, #4]
 800027c:	603b      	str	r3, [r7, #0]
	return a+b+c+d;
 800027e:	68fa      	ldr	r2, [r7, #12]
 8000280:	68bb      	ldr	r3, [r7, #8]
 8000282:	441a      	add	r2, r3
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	441a      	add	r2, r3
 8000288:	683b      	ldr	r3, [r7, #0]
 800028a:	4413      	add	r3, r2
}
 800028c:	4618      	mov	r0, r3
 800028e:	3714      	adds	r7, #20
 8000290:	46bd      	mov	sp, r7
 8000292:	bc80      	pop	{r7}
 8000294:	4770      	bx	lr
	...

08000298 <change_sp_to_psp>:

__attribute__((naked)) void change_sp_to_psp(void){
	__asm volatile(".equ SRAM_END, (0x20000000 + ( 128*1024 ))");
	__asm volatile(".equ PSP_START, (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 8000298:	4804      	ldr	r0, [pc, #16]	@ (80002ac <change_sp_to_psp+0x14>)
	__asm volatile("MSR PSP, R0");
 800029a:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0, #0x02");
 800029e:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL, R0");
 80002a2:	f380 8814 	msr	CONTROL, r0
	__asm volatile("BX LR");
 80002a6:	4770      	bx	lr
}
 80002a8:	bf00      	nop
 80002aa:	0000      	.short	0x0000
 80002ac:	2001fe00 	.word	0x2001fe00

080002b0 <generate_exception>:

void generate_exception(void){
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0x02");
 80002b4:	df02      	svc	2
}
 80002b6:	bf00      	nop
 80002b8:	46bd      	mov	sp, r7
 80002ba:	bc80      	pop	{r7}
 80002bc:	4770      	bx	lr
	...

080002c0 <main>:

int main(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b082      	sub	sp, #8
 80002c4:	af00      	add	r7, sp, #0
	change_sp_to_psp();
 80002c6:	f7ff ffe7 	bl	8000298 <change_sp_to_psp>
	int ret;

	ret = fun_add(1,4,5,6);
 80002ca:	2306      	movs	r3, #6
 80002cc:	2205      	movs	r2, #5
 80002ce:	2104      	movs	r1, #4
 80002d0:	2001      	movs	r0, #1
 80002d2:	f7ff ffcd 	bl	8000270 <fun_add>
 80002d6:	6078      	str	r0, [r7, #4]

	printf("result = %d\n", ret);
 80002d8:	6879      	ldr	r1, [r7, #4]
 80002da:	4803      	ldr	r0, [pc, #12]	@ (80002e8 <main+0x28>)
 80002dc:	f000 f9b8 	bl	8000650 <iprintf>

	generate_exception();
 80002e0:	f7ff ffe6 	bl	80002b0 <generate_exception>

    /* Loop forever */
	for(;;);
 80002e4:	bf00      	nop
 80002e6:	e7fd      	b.n	80002e4 <main+0x24>
 80002e8:	08001334 	.word	0x08001334

080002ec <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	4603      	mov	r3, r0
 80002f4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002f6:	4b0e      	ldr	r3, [pc, #56]	@ (8000330 <ITM_SendChar+0x44>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a0d      	ldr	r2, [pc, #52]	@ (8000330 <ITM_SendChar+0x44>)
 80002fc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000300:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000302:	4b0c      	ldr	r3, [pc, #48]	@ (8000334 <ITM_SendChar+0x48>)
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	4a0b      	ldr	r2, [pc, #44]	@ (8000334 <ITM_SendChar+0x48>)
 8000308:	f043 0301 	orr.w	r3, r3, #1
 800030c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800030e:	bf00      	nop
 8000310:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	f003 0301 	and.w	r3, r3, #1
 800031a:	2b00      	cmp	r3, #0
 800031c:	d0f8      	beq.n	8000310 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800031e:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000322:	79fb      	ldrb	r3, [r7, #7]
 8000324:	6013      	str	r3, [r2, #0]
}
 8000326:	bf00      	nop
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	bc80      	pop	{r7}
 800032e:	4770      	bx	lr
 8000330:	e000edfc 	.word	0xe000edfc
 8000334:	e0000e00 	.word	0xe0000e00

08000338 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	b086      	sub	sp, #24
 800033c:	af00      	add	r7, sp, #0
 800033e:	60f8      	str	r0, [r7, #12]
 8000340:	60b9      	str	r1, [r7, #8]
 8000342:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000344:	2300      	movs	r3, #0
 8000346:	617b      	str	r3, [r7, #20]
 8000348:	e00a      	b.n	8000360 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800034a:	f3af 8000 	nop.w
 800034e:	4601      	mov	r1, r0
 8000350:	68bb      	ldr	r3, [r7, #8]
 8000352:	1c5a      	adds	r2, r3, #1
 8000354:	60ba      	str	r2, [r7, #8]
 8000356:	b2ca      	uxtb	r2, r1
 8000358:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035a:	697b      	ldr	r3, [r7, #20]
 800035c:	3301      	adds	r3, #1
 800035e:	617b      	str	r3, [r7, #20]
 8000360:	697a      	ldr	r2, [r7, #20]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	429a      	cmp	r2, r3
 8000366:	dbf0      	blt.n	800034a <_read+0x12>
  }

  return len;
 8000368:	687b      	ldr	r3, [r7, #4]
}
 800036a:	4618      	mov	r0, r3
 800036c:	3718      	adds	r7, #24
 800036e:	46bd      	mov	sp, r7
 8000370:	bd80      	pop	{r7, pc}

08000372 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000372:	b580      	push	{r7, lr}
 8000374:	b086      	sub	sp, #24
 8000376:	af00      	add	r7, sp, #0
 8000378:	60f8      	str	r0, [r7, #12]
 800037a:	60b9      	str	r1, [r7, #8]
 800037c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037e:	2300      	movs	r3, #0
 8000380:	617b      	str	r3, [r7, #20]
 8000382:	e009      	b.n	8000398 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000384:	68bb      	ldr	r3, [r7, #8]
 8000386:	1c5a      	adds	r2, r3, #1
 8000388:	60ba      	str	r2, [r7, #8]
 800038a:	781b      	ldrb	r3, [r3, #0]
 800038c:	4618      	mov	r0, r3
 800038e:	f7ff ffad 	bl	80002ec <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000392:	697b      	ldr	r3, [r7, #20]
 8000394:	3301      	adds	r3, #1
 8000396:	617b      	str	r3, [r7, #20]
 8000398:	697a      	ldr	r2, [r7, #20]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	429a      	cmp	r2, r3
 800039e:	dbf1      	blt.n	8000384 <_write+0x12>

  }
  return len;
 80003a0:	687b      	ldr	r3, [r7, #4]
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	3718      	adds	r7, #24
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bd80      	pop	{r7, pc}

080003aa <_close>:

int _close(int file)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003b2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bc80      	pop	{r7}
 80003be:	4770      	bx	lr

080003c0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003c0:	b480      	push	{r7}
 80003c2:	b083      	sub	sp, #12
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
 80003c8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003ca:	683b      	ldr	r3, [r7, #0]
 80003cc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003d0:	605a      	str	r2, [r3, #4]
  return 0;
 80003d2:	2300      	movs	r3, #0
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	370c      	adds	r7, #12
 80003d8:	46bd      	mov	sp, r7
 80003da:	bc80      	pop	{r7}
 80003dc:	4770      	bx	lr

080003de <_isatty>:

int _isatty(int file)
{
 80003de:	b480      	push	{r7}
 80003e0:	b083      	sub	sp, #12
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003e6:	2301      	movs	r3, #1
}
 80003e8:	4618      	mov	r0, r3
 80003ea:	370c      	adds	r7, #12
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bc80      	pop	{r7}
 80003f0:	4770      	bx	lr

080003f2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b085      	sub	sp, #20
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	60f8      	str	r0, [r7, #12]
 80003fa:	60b9      	str	r1, [r7, #8]
 80003fc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003fe:	2300      	movs	r3, #0
}
 8000400:	4618      	mov	r0, r3
 8000402:	3714      	adds	r7, #20
 8000404:	46bd      	mov	sp, r7
 8000406:	bc80      	pop	{r7}
 8000408:	4770      	bx	lr
	...

0800040c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800040c:	b580      	push	{r7, lr}
 800040e:	b086      	sub	sp, #24
 8000410:	af00      	add	r7, sp, #0
 8000412:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000414:	4a14      	ldr	r2, [pc, #80]	@ (8000468 <_sbrk+0x5c>)
 8000416:	4b15      	ldr	r3, [pc, #84]	@ (800046c <_sbrk+0x60>)
 8000418:	1ad3      	subs	r3, r2, r3
 800041a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800041c:	697b      	ldr	r3, [r7, #20]
 800041e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000420:	4b13      	ldr	r3, [pc, #76]	@ (8000470 <_sbrk+0x64>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	2b00      	cmp	r3, #0
 8000426:	d102      	bne.n	800042e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000428:	4b11      	ldr	r3, [pc, #68]	@ (8000470 <_sbrk+0x64>)
 800042a:	4a12      	ldr	r2, [pc, #72]	@ (8000474 <_sbrk+0x68>)
 800042c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800042e:	4b10      	ldr	r3, [pc, #64]	@ (8000470 <_sbrk+0x64>)
 8000430:	681a      	ldr	r2, [r3, #0]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4413      	add	r3, r2
 8000436:	693a      	ldr	r2, [r7, #16]
 8000438:	429a      	cmp	r2, r3
 800043a:	d207      	bcs.n	800044c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800043c:	f000 fa40 	bl	80008c0 <__errno>
 8000440:	4603      	mov	r3, r0
 8000442:	220c      	movs	r2, #12
 8000444:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000446:	f04f 33ff 	mov.w	r3, #4294967295
 800044a:	e009      	b.n	8000460 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800044c:	4b08      	ldr	r3, [pc, #32]	@ (8000470 <_sbrk+0x64>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000452:	4b07      	ldr	r3, [pc, #28]	@ (8000470 <_sbrk+0x64>)
 8000454:	681a      	ldr	r2, [r3, #0]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	4413      	add	r3, r2
 800045a:	4a05      	ldr	r2, [pc, #20]	@ (8000470 <_sbrk+0x64>)
 800045c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800045e:	68fb      	ldr	r3, [r7, #12]
}
 8000460:	4618      	mov	r0, r3
 8000462:	3718      	adds	r7, #24
 8000464:	46bd      	mov	sp, r7
 8000466:	bd80      	pop	{r7, pc}
 8000468:	20020000 	.word	0x20020000
 800046c:	00000400 	.word	0x00000400
 8000470:	20000078 	.word	0x20000078
 8000474:	200001c8 	.word	0x200001c8

08000478 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000478:	480d      	ldr	r0, [pc, #52]	@ (80004b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800047a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800047c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000480:	480c      	ldr	r0, [pc, #48]	@ (80004b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000482:	490d      	ldr	r1, [pc, #52]	@ (80004b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000484:	4a0d      	ldr	r2, [pc, #52]	@ (80004bc <LoopForever+0xe>)
  movs r3, #0
 8000486:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000488:	e002      	b.n	8000490 <LoopCopyDataInit>

0800048a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800048a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800048c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800048e:	3304      	adds	r3, #4

08000490 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000490:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000492:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000494:	d3f9      	bcc.n	800048a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000496:	4a0a      	ldr	r2, [pc, #40]	@ (80004c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000498:	4c0a      	ldr	r4, [pc, #40]	@ (80004c4 <LoopForever+0x16>)
  movs r3, #0
 800049a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800049c:	e001      	b.n	80004a2 <LoopFillZerobss>

0800049e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800049e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004a0:	3204      	adds	r2, #4

080004a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004a4:	d3fb      	bcc.n	800049e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004a6:	f000 fa11 	bl	80008cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004aa:	f7ff ff09 	bl	80002c0 <main>

080004ae <LoopForever>:

LoopForever:
  b LoopForever
 80004ae:	e7fe      	b.n	80004ae <LoopForever>
  ldr   r0, =_estack
 80004b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004b8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004bc:	08001398 	.word	0x08001398
  ldr r2, =_sbss
 80004c0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004c4:	200001c8 	.word	0x200001c8

080004c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004c8:	e7fe      	b.n	80004c8 <ADC_IRQHandler>
	...

080004cc <std>:
 80004cc:	2300      	movs	r3, #0
 80004ce:	b510      	push	{r4, lr}
 80004d0:	4604      	mov	r4, r0
 80004d2:	e9c0 3300 	strd	r3, r3, [r0]
 80004d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004da:	6083      	str	r3, [r0, #8]
 80004dc:	8181      	strh	r1, [r0, #12]
 80004de:	6643      	str	r3, [r0, #100]	@ 0x64
 80004e0:	81c2      	strh	r2, [r0, #14]
 80004e2:	6183      	str	r3, [r0, #24]
 80004e4:	4619      	mov	r1, r3
 80004e6:	2208      	movs	r2, #8
 80004e8:	305c      	adds	r0, #92	@ 0x5c
 80004ea:	f000 f99b 	bl	8000824 <memset>
 80004ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000524 <std+0x58>)
 80004f0:	6263      	str	r3, [r4, #36]	@ 0x24
 80004f2:	4b0d      	ldr	r3, [pc, #52]	@ (8000528 <std+0x5c>)
 80004f4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004f6:	4b0d      	ldr	r3, [pc, #52]	@ (800052c <std+0x60>)
 80004f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004fa:	4b0d      	ldr	r3, [pc, #52]	@ (8000530 <std+0x64>)
 80004fc:	6323      	str	r3, [r4, #48]	@ 0x30
 80004fe:	4b0d      	ldr	r3, [pc, #52]	@ (8000534 <std+0x68>)
 8000500:	6224      	str	r4, [r4, #32]
 8000502:	429c      	cmp	r4, r3
 8000504:	d006      	beq.n	8000514 <std+0x48>
 8000506:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800050a:	4294      	cmp	r4, r2
 800050c:	d002      	beq.n	8000514 <std+0x48>
 800050e:	33d0      	adds	r3, #208	@ 0xd0
 8000510:	429c      	cmp	r4, r3
 8000512:	d105      	bne.n	8000520 <std+0x54>
 8000514:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800051c:	f000 b9fa 	b.w	8000914 <__retarget_lock_init_recursive>
 8000520:	bd10      	pop	{r4, pc}
 8000522:	bf00      	nop
 8000524:	08000675 	.word	0x08000675
 8000528:	08000697 	.word	0x08000697
 800052c:	080006cf 	.word	0x080006cf
 8000530:	080006f3 	.word	0x080006f3
 8000534:	2000007c 	.word	0x2000007c

08000538 <stdio_exit_handler>:
 8000538:	4a02      	ldr	r2, [pc, #8]	@ (8000544 <stdio_exit_handler+0xc>)
 800053a:	4903      	ldr	r1, [pc, #12]	@ (8000548 <stdio_exit_handler+0x10>)
 800053c:	4803      	ldr	r0, [pc, #12]	@ (800054c <stdio_exit_handler+0x14>)
 800053e:	f000 b869 	b.w	8000614 <_fwalk_sglue>
 8000542:	bf00      	nop
 8000544:	20000000 	.word	0x20000000
 8000548:	080011a5 	.word	0x080011a5
 800054c:	20000010 	.word	0x20000010

08000550 <cleanup_stdio>:
 8000550:	6841      	ldr	r1, [r0, #4]
 8000552:	4b0c      	ldr	r3, [pc, #48]	@ (8000584 <cleanup_stdio+0x34>)
 8000554:	4299      	cmp	r1, r3
 8000556:	b510      	push	{r4, lr}
 8000558:	4604      	mov	r4, r0
 800055a:	d001      	beq.n	8000560 <cleanup_stdio+0x10>
 800055c:	f000 fe22 	bl	80011a4 <_fflush_r>
 8000560:	68a1      	ldr	r1, [r4, #8]
 8000562:	4b09      	ldr	r3, [pc, #36]	@ (8000588 <cleanup_stdio+0x38>)
 8000564:	4299      	cmp	r1, r3
 8000566:	d002      	beq.n	800056e <cleanup_stdio+0x1e>
 8000568:	4620      	mov	r0, r4
 800056a:	f000 fe1b 	bl	80011a4 <_fflush_r>
 800056e:	68e1      	ldr	r1, [r4, #12]
 8000570:	4b06      	ldr	r3, [pc, #24]	@ (800058c <cleanup_stdio+0x3c>)
 8000572:	4299      	cmp	r1, r3
 8000574:	d004      	beq.n	8000580 <cleanup_stdio+0x30>
 8000576:	4620      	mov	r0, r4
 8000578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800057c:	f000 be12 	b.w	80011a4 <_fflush_r>
 8000580:	bd10      	pop	{r4, pc}
 8000582:	bf00      	nop
 8000584:	2000007c 	.word	0x2000007c
 8000588:	200000e4 	.word	0x200000e4
 800058c:	2000014c 	.word	0x2000014c

08000590 <global_stdio_init.part.0>:
 8000590:	b510      	push	{r4, lr}
 8000592:	4b0b      	ldr	r3, [pc, #44]	@ (80005c0 <global_stdio_init.part.0+0x30>)
 8000594:	4c0b      	ldr	r4, [pc, #44]	@ (80005c4 <global_stdio_init.part.0+0x34>)
 8000596:	4a0c      	ldr	r2, [pc, #48]	@ (80005c8 <global_stdio_init.part.0+0x38>)
 8000598:	601a      	str	r2, [r3, #0]
 800059a:	4620      	mov	r0, r4
 800059c:	2200      	movs	r2, #0
 800059e:	2104      	movs	r1, #4
 80005a0:	f7ff ff94 	bl	80004cc <std>
 80005a4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005a8:	2201      	movs	r2, #1
 80005aa:	2109      	movs	r1, #9
 80005ac:	f7ff ff8e 	bl	80004cc <std>
 80005b0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005b4:	2202      	movs	r2, #2
 80005b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ba:	2112      	movs	r1, #18
 80005bc:	f7ff bf86 	b.w	80004cc <std>
 80005c0:	200001b4 	.word	0x200001b4
 80005c4:	2000007c 	.word	0x2000007c
 80005c8:	08000539 	.word	0x08000539

080005cc <__sfp_lock_acquire>:
 80005cc:	4801      	ldr	r0, [pc, #4]	@ (80005d4 <__sfp_lock_acquire+0x8>)
 80005ce:	f000 b9a2 	b.w	8000916 <__retarget_lock_acquire_recursive>
 80005d2:	bf00      	nop
 80005d4:	200001bd 	.word	0x200001bd

080005d8 <__sfp_lock_release>:
 80005d8:	4801      	ldr	r0, [pc, #4]	@ (80005e0 <__sfp_lock_release+0x8>)
 80005da:	f000 b99d 	b.w	8000918 <__retarget_lock_release_recursive>
 80005de:	bf00      	nop
 80005e0:	200001bd 	.word	0x200001bd

080005e4 <__sinit>:
 80005e4:	b510      	push	{r4, lr}
 80005e6:	4604      	mov	r4, r0
 80005e8:	f7ff fff0 	bl	80005cc <__sfp_lock_acquire>
 80005ec:	6a23      	ldr	r3, [r4, #32]
 80005ee:	b11b      	cbz	r3, 80005f8 <__sinit+0x14>
 80005f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f4:	f7ff bff0 	b.w	80005d8 <__sfp_lock_release>
 80005f8:	4b04      	ldr	r3, [pc, #16]	@ (800060c <__sinit+0x28>)
 80005fa:	6223      	str	r3, [r4, #32]
 80005fc:	4b04      	ldr	r3, [pc, #16]	@ (8000610 <__sinit+0x2c>)
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	2b00      	cmp	r3, #0
 8000602:	d1f5      	bne.n	80005f0 <__sinit+0xc>
 8000604:	f7ff ffc4 	bl	8000590 <global_stdio_init.part.0>
 8000608:	e7f2      	b.n	80005f0 <__sinit+0xc>
 800060a:	bf00      	nop
 800060c:	08000551 	.word	0x08000551
 8000610:	200001b4 	.word	0x200001b4

08000614 <_fwalk_sglue>:
 8000614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000618:	4607      	mov	r7, r0
 800061a:	4688      	mov	r8, r1
 800061c:	4614      	mov	r4, r2
 800061e:	2600      	movs	r6, #0
 8000620:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000624:	f1b9 0901 	subs.w	r9, r9, #1
 8000628:	d505      	bpl.n	8000636 <_fwalk_sglue+0x22>
 800062a:	6824      	ldr	r4, [r4, #0]
 800062c:	2c00      	cmp	r4, #0
 800062e:	d1f7      	bne.n	8000620 <_fwalk_sglue+0xc>
 8000630:	4630      	mov	r0, r6
 8000632:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000636:	89ab      	ldrh	r3, [r5, #12]
 8000638:	2b01      	cmp	r3, #1
 800063a:	d907      	bls.n	800064c <_fwalk_sglue+0x38>
 800063c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000640:	3301      	adds	r3, #1
 8000642:	d003      	beq.n	800064c <_fwalk_sglue+0x38>
 8000644:	4629      	mov	r1, r5
 8000646:	4638      	mov	r0, r7
 8000648:	47c0      	blx	r8
 800064a:	4306      	orrs	r6, r0
 800064c:	3568      	adds	r5, #104	@ 0x68
 800064e:	e7e9      	b.n	8000624 <_fwalk_sglue+0x10>

08000650 <iprintf>:
 8000650:	b40f      	push	{r0, r1, r2, r3}
 8000652:	b507      	push	{r0, r1, r2, lr}
 8000654:	4906      	ldr	r1, [pc, #24]	@ (8000670 <iprintf+0x20>)
 8000656:	ab04      	add	r3, sp, #16
 8000658:	6808      	ldr	r0, [r1, #0]
 800065a:	f853 2b04 	ldr.w	r2, [r3], #4
 800065e:	6881      	ldr	r1, [r0, #8]
 8000660:	9301      	str	r3, [sp, #4]
 8000662:	f000 fa7b 	bl	8000b5c <_vfiprintf_r>
 8000666:	b003      	add	sp, #12
 8000668:	f85d eb04 	ldr.w	lr, [sp], #4
 800066c:	b004      	add	sp, #16
 800066e:	4770      	bx	lr
 8000670:	2000000c 	.word	0x2000000c

08000674 <__sread>:
 8000674:	b510      	push	{r4, lr}
 8000676:	460c      	mov	r4, r1
 8000678:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800067c:	f000 f8fc 	bl	8000878 <_read_r>
 8000680:	2800      	cmp	r0, #0
 8000682:	bfab      	itete	ge
 8000684:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000686:	89a3      	ldrhlt	r3, [r4, #12]
 8000688:	181b      	addge	r3, r3, r0
 800068a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800068e:	bfac      	ite	ge
 8000690:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000692:	81a3      	strhlt	r3, [r4, #12]
 8000694:	bd10      	pop	{r4, pc}

08000696 <__swrite>:
 8000696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800069a:	461f      	mov	r7, r3
 800069c:	898b      	ldrh	r3, [r1, #12]
 800069e:	05db      	lsls	r3, r3, #23
 80006a0:	4605      	mov	r5, r0
 80006a2:	460c      	mov	r4, r1
 80006a4:	4616      	mov	r6, r2
 80006a6:	d505      	bpl.n	80006b4 <__swrite+0x1e>
 80006a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ac:	2302      	movs	r3, #2
 80006ae:	2200      	movs	r2, #0
 80006b0:	f000 f8d0 	bl	8000854 <_lseek_r>
 80006b4:	89a3      	ldrh	r3, [r4, #12]
 80006b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006ba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006be:	81a3      	strh	r3, [r4, #12]
 80006c0:	4632      	mov	r2, r6
 80006c2:	463b      	mov	r3, r7
 80006c4:	4628      	mov	r0, r5
 80006c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006ca:	f000 b8e7 	b.w	800089c <_write_r>

080006ce <__sseek>:
 80006ce:	b510      	push	{r4, lr}
 80006d0:	460c      	mov	r4, r1
 80006d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006d6:	f000 f8bd 	bl	8000854 <_lseek_r>
 80006da:	1c43      	adds	r3, r0, #1
 80006dc:	89a3      	ldrh	r3, [r4, #12]
 80006de:	bf15      	itete	ne
 80006e0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80006e2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80006e6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006ea:	81a3      	strheq	r3, [r4, #12]
 80006ec:	bf18      	it	ne
 80006ee:	81a3      	strhne	r3, [r4, #12]
 80006f0:	bd10      	pop	{r4, pc}

080006f2 <__sclose>:
 80006f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006f6:	f000 b89d 	b.w	8000834 <_close_r>

080006fa <__swbuf_r>:
 80006fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fc:	460e      	mov	r6, r1
 80006fe:	4614      	mov	r4, r2
 8000700:	4605      	mov	r5, r0
 8000702:	b118      	cbz	r0, 800070c <__swbuf_r+0x12>
 8000704:	6a03      	ldr	r3, [r0, #32]
 8000706:	b90b      	cbnz	r3, 800070c <__swbuf_r+0x12>
 8000708:	f7ff ff6c 	bl	80005e4 <__sinit>
 800070c:	69a3      	ldr	r3, [r4, #24]
 800070e:	60a3      	str	r3, [r4, #8]
 8000710:	89a3      	ldrh	r3, [r4, #12]
 8000712:	071a      	lsls	r2, r3, #28
 8000714:	d501      	bpl.n	800071a <__swbuf_r+0x20>
 8000716:	6923      	ldr	r3, [r4, #16]
 8000718:	b943      	cbnz	r3, 800072c <__swbuf_r+0x32>
 800071a:	4621      	mov	r1, r4
 800071c:	4628      	mov	r0, r5
 800071e:	f000 f82b 	bl	8000778 <__swsetup_r>
 8000722:	b118      	cbz	r0, 800072c <__swbuf_r+0x32>
 8000724:	f04f 37ff 	mov.w	r7, #4294967295
 8000728:	4638      	mov	r0, r7
 800072a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800072c:	6823      	ldr	r3, [r4, #0]
 800072e:	6922      	ldr	r2, [r4, #16]
 8000730:	1a98      	subs	r0, r3, r2
 8000732:	6963      	ldr	r3, [r4, #20]
 8000734:	b2f6      	uxtb	r6, r6
 8000736:	4283      	cmp	r3, r0
 8000738:	4637      	mov	r7, r6
 800073a:	dc05      	bgt.n	8000748 <__swbuf_r+0x4e>
 800073c:	4621      	mov	r1, r4
 800073e:	4628      	mov	r0, r5
 8000740:	f000 fd30 	bl	80011a4 <_fflush_r>
 8000744:	2800      	cmp	r0, #0
 8000746:	d1ed      	bne.n	8000724 <__swbuf_r+0x2a>
 8000748:	68a3      	ldr	r3, [r4, #8]
 800074a:	3b01      	subs	r3, #1
 800074c:	60a3      	str	r3, [r4, #8]
 800074e:	6823      	ldr	r3, [r4, #0]
 8000750:	1c5a      	adds	r2, r3, #1
 8000752:	6022      	str	r2, [r4, #0]
 8000754:	701e      	strb	r6, [r3, #0]
 8000756:	6962      	ldr	r2, [r4, #20]
 8000758:	1c43      	adds	r3, r0, #1
 800075a:	429a      	cmp	r2, r3
 800075c:	d004      	beq.n	8000768 <__swbuf_r+0x6e>
 800075e:	89a3      	ldrh	r3, [r4, #12]
 8000760:	07db      	lsls	r3, r3, #31
 8000762:	d5e1      	bpl.n	8000728 <__swbuf_r+0x2e>
 8000764:	2e0a      	cmp	r6, #10
 8000766:	d1df      	bne.n	8000728 <__swbuf_r+0x2e>
 8000768:	4621      	mov	r1, r4
 800076a:	4628      	mov	r0, r5
 800076c:	f000 fd1a 	bl	80011a4 <_fflush_r>
 8000770:	2800      	cmp	r0, #0
 8000772:	d0d9      	beq.n	8000728 <__swbuf_r+0x2e>
 8000774:	e7d6      	b.n	8000724 <__swbuf_r+0x2a>
	...

08000778 <__swsetup_r>:
 8000778:	b538      	push	{r3, r4, r5, lr}
 800077a:	4b29      	ldr	r3, [pc, #164]	@ (8000820 <__swsetup_r+0xa8>)
 800077c:	4605      	mov	r5, r0
 800077e:	6818      	ldr	r0, [r3, #0]
 8000780:	460c      	mov	r4, r1
 8000782:	b118      	cbz	r0, 800078c <__swsetup_r+0x14>
 8000784:	6a03      	ldr	r3, [r0, #32]
 8000786:	b90b      	cbnz	r3, 800078c <__swsetup_r+0x14>
 8000788:	f7ff ff2c 	bl	80005e4 <__sinit>
 800078c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000790:	0719      	lsls	r1, r3, #28
 8000792:	d422      	bmi.n	80007da <__swsetup_r+0x62>
 8000794:	06da      	lsls	r2, r3, #27
 8000796:	d407      	bmi.n	80007a8 <__swsetup_r+0x30>
 8000798:	2209      	movs	r2, #9
 800079a:	602a      	str	r2, [r5, #0]
 800079c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80007a0:	81a3      	strh	r3, [r4, #12]
 80007a2:	f04f 30ff 	mov.w	r0, #4294967295
 80007a6:	e033      	b.n	8000810 <__swsetup_r+0x98>
 80007a8:	0758      	lsls	r0, r3, #29
 80007aa:	d512      	bpl.n	80007d2 <__swsetup_r+0x5a>
 80007ac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007ae:	b141      	cbz	r1, 80007c2 <__swsetup_r+0x4a>
 80007b0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007b4:	4299      	cmp	r1, r3
 80007b6:	d002      	beq.n	80007be <__swsetup_r+0x46>
 80007b8:	4628      	mov	r0, r5
 80007ba:	f000 f8af 	bl	800091c <_free_r>
 80007be:	2300      	movs	r3, #0
 80007c0:	6363      	str	r3, [r4, #52]	@ 0x34
 80007c2:	89a3      	ldrh	r3, [r4, #12]
 80007c4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80007c8:	81a3      	strh	r3, [r4, #12]
 80007ca:	2300      	movs	r3, #0
 80007cc:	6063      	str	r3, [r4, #4]
 80007ce:	6923      	ldr	r3, [r4, #16]
 80007d0:	6023      	str	r3, [r4, #0]
 80007d2:	89a3      	ldrh	r3, [r4, #12]
 80007d4:	f043 0308 	orr.w	r3, r3, #8
 80007d8:	81a3      	strh	r3, [r4, #12]
 80007da:	6923      	ldr	r3, [r4, #16]
 80007dc:	b94b      	cbnz	r3, 80007f2 <__swsetup_r+0x7a>
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80007e4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80007e8:	d003      	beq.n	80007f2 <__swsetup_r+0x7a>
 80007ea:	4621      	mov	r1, r4
 80007ec:	4628      	mov	r0, r5
 80007ee:	f000 fd27 	bl	8001240 <__smakebuf_r>
 80007f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007f6:	f013 0201 	ands.w	r2, r3, #1
 80007fa:	d00a      	beq.n	8000812 <__swsetup_r+0x9a>
 80007fc:	2200      	movs	r2, #0
 80007fe:	60a2      	str	r2, [r4, #8]
 8000800:	6962      	ldr	r2, [r4, #20]
 8000802:	4252      	negs	r2, r2
 8000804:	61a2      	str	r2, [r4, #24]
 8000806:	6922      	ldr	r2, [r4, #16]
 8000808:	b942      	cbnz	r2, 800081c <__swsetup_r+0xa4>
 800080a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800080e:	d1c5      	bne.n	800079c <__swsetup_r+0x24>
 8000810:	bd38      	pop	{r3, r4, r5, pc}
 8000812:	0799      	lsls	r1, r3, #30
 8000814:	bf58      	it	pl
 8000816:	6962      	ldrpl	r2, [r4, #20]
 8000818:	60a2      	str	r2, [r4, #8]
 800081a:	e7f4      	b.n	8000806 <__swsetup_r+0x8e>
 800081c:	2000      	movs	r0, #0
 800081e:	e7f7      	b.n	8000810 <__swsetup_r+0x98>
 8000820:	2000000c 	.word	0x2000000c

08000824 <memset>:
 8000824:	4402      	add	r2, r0
 8000826:	4603      	mov	r3, r0
 8000828:	4293      	cmp	r3, r2
 800082a:	d100      	bne.n	800082e <memset+0xa>
 800082c:	4770      	bx	lr
 800082e:	f803 1b01 	strb.w	r1, [r3], #1
 8000832:	e7f9      	b.n	8000828 <memset+0x4>

08000834 <_close_r>:
 8000834:	b538      	push	{r3, r4, r5, lr}
 8000836:	4d06      	ldr	r5, [pc, #24]	@ (8000850 <_close_r+0x1c>)
 8000838:	2300      	movs	r3, #0
 800083a:	4604      	mov	r4, r0
 800083c:	4608      	mov	r0, r1
 800083e:	602b      	str	r3, [r5, #0]
 8000840:	f7ff fdb3 	bl	80003aa <_close>
 8000844:	1c43      	adds	r3, r0, #1
 8000846:	d102      	bne.n	800084e <_close_r+0x1a>
 8000848:	682b      	ldr	r3, [r5, #0]
 800084a:	b103      	cbz	r3, 800084e <_close_r+0x1a>
 800084c:	6023      	str	r3, [r4, #0]
 800084e:	bd38      	pop	{r3, r4, r5, pc}
 8000850:	200001b8 	.word	0x200001b8

08000854 <_lseek_r>:
 8000854:	b538      	push	{r3, r4, r5, lr}
 8000856:	4d07      	ldr	r5, [pc, #28]	@ (8000874 <_lseek_r+0x20>)
 8000858:	4604      	mov	r4, r0
 800085a:	4608      	mov	r0, r1
 800085c:	4611      	mov	r1, r2
 800085e:	2200      	movs	r2, #0
 8000860:	602a      	str	r2, [r5, #0]
 8000862:	461a      	mov	r2, r3
 8000864:	f7ff fdc5 	bl	80003f2 <_lseek>
 8000868:	1c43      	adds	r3, r0, #1
 800086a:	d102      	bne.n	8000872 <_lseek_r+0x1e>
 800086c:	682b      	ldr	r3, [r5, #0]
 800086e:	b103      	cbz	r3, 8000872 <_lseek_r+0x1e>
 8000870:	6023      	str	r3, [r4, #0]
 8000872:	bd38      	pop	{r3, r4, r5, pc}
 8000874:	200001b8 	.word	0x200001b8

08000878 <_read_r>:
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4d07      	ldr	r5, [pc, #28]	@ (8000898 <_read_r+0x20>)
 800087c:	4604      	mov	r4, r0
 800087e:	4608      	mov	r0, r1
 8000880:	4611      	mov	r1, r2
 8000882:	2200      	movs	r2, #0
 8000884:	602a      	str	r2, [r5, #0]
 8000886:	461a      	mov	r2, r3
 8000888:	f7ff fd56 	bl	8000338 <_read>
 800088c:	1c43      	adds	r3, r0, #1
 800088e:	d102      	bne.n	8000896 <_read_r+0x1e>
 8000890:	682b      	ldr	r3, [r5, #0]
 8000892:	b103      	cbz	r3, 8000896 <_read_r+0x1e>
 8000894:	6023      	str	r3, [r4, #0]
 8000896:	bd38      	pop	{r3, r4, r5, pc}
 8000898:	200001b8 	.word	0x200001b8

0800089c <_write_r>:
 800089c:	b538      	push	{r3, r4, r5, lr}
 800089e:	4d07      	ldr	r5, [pc, #28]	@ (80008bc <_write_r+0x20>)
 80008a0:	4604      	mov	r4, r0
 80008a2:	4608      	mov	r0, r1
 80008a4:	4611      	mov	r1, r2
 80008a6:	2200      	movs	r2, #0
 80008a8:	602a      	str	r2, [r5, #0]
 80008aa:	461a      	mov	r2, r3
 80008ac:	f7ff fd61 	bl	8000372 <_write>
 80008b0:	1c43      	adds	r3, r0, #1
 80008b2:	d102      	bne.n	80008ba <_write_r+0x1e>
 80008b4:	682b      	ldr	r3, [r5, #0]
 80008b6:	b103      	cbz	r3, 80008ba <_write_r+0x1e>
 80008b8:	6023      	str	r3, [r4, #0]
 80008ba:	bd38      	pop	{r3, r4, r5, pc}
 80008bc:	200001b8 	.word	0x200001b8

080008c0 <__errno>:
 80008c0:	4b01      	ldr	r3, [pc, #4]	@ (80008c8 <__errno+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	2000000c 	.word	0x2000000c

080008cc <__libc_init_array>:
 80008cc:	b570      	push	{r4, r5, r6, lr}
 80008ce:	4d0d      	ldr	r5, [pc, #52]	@ (8000904 <__libc_init_array+0x38>)
 80008d0:	4c0d      	ldr	r4, [pc, #52]	@ (8000908 <__libc_init_array+0x3c>)
 80008d2:	1b64      	subs	r4, r4, r5
 80008d4:	10a4      	asrs	r4, r4, #2
 80008d6:	2600      	movs	r6, #0
 80008d8:	42a6      	cmp	r6, r4
 80008da:	d109      	bne.n	80008f0 <__libc_init_array+0x24>
 80008dc:	4d0b      	ldr	r5, [pc, #44]	@ (800090c <__libc_init_array+0x40>)
 80008de:	4c0c      	ldr	r4, [pc, #48]	@ (8000910 <__libc_init_array+0x44>)
 80008e0:	f000 fd1c 	bl	800131c <_init>
 80008e4:	1b64      	subs	r4, r4, r5
 80008e6:	10a4      	asrs	r4, r4, #2
 80008e8:	2600      	movs	r6, #0
 80008ea:	42a6      	cmp	r6, r4
 80008ec:	d105      	bne.n	80008fa <__libc_init_array+0x2e>
 80008ee:	bd70      	pop	{r4, r5, r6, pc}
 80008f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80008f4:	4798      	blx	r3
 80008f6:	3601      	adds	r6, #1
 80008f8:	e7ee      	b.n	80008d8 <__libc_init_array+0xc>
 80008fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80008fe:	4798      	blx	r3
 8000900:	3601      	adds	r6, #1
 8000902:	e7f2      	b.n	80008ea <__libc_init_array+0x1e>
 8000904:	08001390 	.word	0x08001390
 8000908:	08001390 	.word	0x08001390
 800090c:	08001390 	.word	0x08001390
 8000910:	08001394 	.word	0x08001394

08000914 <__retarget_lock_init_recursive>:
 8000914:	4770      	bx	lr

08000916 <__retarget_lock_acquire_recursive>:
 8000916:	4770      	bx	lr

08000918 <__retarget_lock_release_recursive>:
 8000918:	4770      	bx	lr
	...

0800091c <_free_r>:
 800091c:	b538      	push	{r3, r4, r5, lr}
 800091e:	4605      	mov	r5, r0
 8000920:	2900      	cmp	r1, #0
 8000922:	d041      	beq.n	80009a8 <_free_r+0x8c>
 8000924:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000928:	1f0c      	subs	r4, r1, #4
 800092a:	2b00      	cmp	r3, #0
 800092c:	bfb8      	it	lt
 800092e:	18e4      	addlt	r4, r4, r3
 8000930:	f000 f8e0 	bl	8000af4 <__malloc_lock>
 8000934:	4a1d      	ldr	r2, [pc, #116]	@ (80009ac <_free_r+0x90>)
 8000936:	6813      	ldr	r3, [r2, #0]
 8000938:	b933      	cbnz	r3, 8000948 <_free_r+0x2c>
 800093a:	6063      	str	r3, [r4, #4]
 800093c:	6014      	str	r4, [r2, #0]
 800093e:	4628      	mov	r0, r5
 8000940:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000944:	f000 b8dc 	b.w	8000b00 <__malloc_unlock>
 8000948:	42a3      	cmp	r3, r4
 800094a:	d908      	bls.n	800095e <_free_r+0x42>
 800094c:	6820      	ldr	r0, [r4, #0]
 800094e:	1821      	adds	r1, r4, r0
 8000950:	428b      	cmp	r3, r1
 8000952:	bf01      	itttt	eq
 8000954:	6819      	ldreq	r1, [r3, #0]
 8000956:	685b      	ldreq	r3, [r3, #4]
 8000958:	1809      	addeq	r1, r1, r0
 800095a:	6021      	streq	r1, [r4, #0]
 800095c:	e7ed      	b.n	800093a <_free_r+0x1e>
 800095e:	461a      	mov	r2, r3
 8000960:	685b      	ldr	r3, [r3, #4]
 8000962:	b10b      	cbz	r3, 8000968 <_free_r+0x4c>
 8000964:	42a3      	cmp	r3, r4
 8000966:	d9fa      	bls.n	800095e <_free_r+0x42>
 8000968:	6811      	ldr	r1, [r2, #0]
 800096a:	1850      	adds	r0, r2, r1
 800096c:	42a0      	cmp	r0, r4
 800096e:	d10b      	bne.n	8000988 <_free_r+0x6c>
 8000970:	6820      	ldr	r0, [r4, #0]
 8000972:	4401      	add	r1, r0
 8000974:	1850      	adds	r0, r2, r1
 8000976:	4283      	cmp	r3, r0
 8000978:	6011      	str	r1, [r2, #0]
 800097a:	d1e0      	bne.n	800093e <_free_r+0x22>
 800097c:	6818      	ldr	r0, [r3, #0]
 800097e:	685b      	ldr	r3, [r3, #4]
 8000980:	6053      	str	r3, [r2, #4]
 8000982:	4408      	add	r0, r1
 8000984:	6010      	str	r0, [r2, #0]
 8000986:	e7da      	b.n	800093e <_free_r+0x22>
 8000988:	d902      	bls.n	8000990 <_free_r+0x74>
 800098a:	230c      	movs	r3, #12
 800098c:	602b      	str	r3, [r5, #0]
 800098e:	e7d6      	b.n	800093e <_free_r+0x22>
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	1821      	adds	r1, r4, r0
 8000994:	428b      	cmp	r3, r1
 8000996:	bf04      	itt	eq
 8000998:	6819      	ldreq	r1, [r3, #0]
 800099a:	685b      	ldreq	r3, [r3, #4]
 800099c:	6063      	str	r3, [r4, #4]
 800099e:	bf04      	itt	eq
 80009a0:	1809      	addeq	r1, r1, r0
 80009a2:	6021      	streq	r1, [r4, #0]
 80009a4:	6054      	str	r4, [r2, #4]
 80009a6:	e7ca      	b.n	800093e <_free_r+0x22>
 80009a8:	bd38      	pop	{r3, r4, r5, pc}
 80009aa:	bf00      	nop
 80009ac:	200001c4 	.word	0x200001c4

080009b0 <sbrk_aligned>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	4e0f      	ldr	r6, [pc, #60]	@ (80009f0 <sbrk_aligned+0x40>)
 80009b4:	460c      	mov	r4, r1
 80009b6:	6831      	ldr	r1, [r6, #0]
 80009b8:	4605      	mov	r5, r0
 80009ba:	b911      	cbnz	r1, 80009c2 <sbrk_aligned+0x12>
 80009bc:	f000 fc9e 	bl	80012fc <_sbrk_r>
 80009c0:	6030      	str	r0, [r6, #0]
 80009c2:	4621      	mov	r1, r4
 80009c4:	4628      	mov	r0, r5
 80009c6:	f000 fc99 	bl	80012fc <_sbrk_r>
 80009ca:	1c43      	adds	r3, r0, #1
 80009cc:	d103      	bne.n	80009d6 <sbrk_aligned+0x26>
 80009ce:	f04f 34ff 	mov.w	r4, #4294967295
 80009d2:	4620      	mov	r0, r4
 80009d4:	bd70      	pop	{r4, r5, r6, pc}
 80009d6:	1cc4      	adds	r4, r0, #3
 80009d8:	f024 0403 	bic.w	r4, r4, #3
 80009dc:	42a0      	cmp	r0, r4
 80009de:	d0f8      	beq.n	80009d2 <sbrk_aligned+0x22>
 80009e0:	1a21      	subs	r1, r4, r0
 80009e2:	4628      	mov	r0, r5
 80009e4:	f000 fc8a 	bl	80012fc <_sbrk_r>
 80009e8:	3001      	adds	r0, #1
 80009ea:	d1f2      	bne.n	80009d2 <sbrk_aligned+0x22>
 80009ec:	e7ef      	b.n	80009ce <sbrk_aligned+0x1e>
 80009ee:	bf00      	nop
 80009f0:	200001c0 	.word	0x200001c0

080009f4 <_malloc_r>:
 80009f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009f8:	1ccd      	adds	r5, r1, #3
 80009fa:	f025 0503 	bic.w	r5, r5, #3
 80009fe:	3508      	adds	r5, #8
 8000a00:	2d0c      	cmp	r5, #12
 8000a02:	bf38      	it	cc
 8000a04:	250c      	movcc	r5, #12
 8000a06:	2d00      	cmp	r5, #0
 8000a08:	4606      	mov	r6, r0
 8000a0a:	db01      	blt.n	8000a10 <_malloc_r+0x1c>
 8000a0c:	42a9      	cmp	r1, r5
 8000a0e:	d904      	bls.n	8000a1a <_malloc_r+0x26>
 8000a10:	230c      	movs	r3, #12
 8000a12:	6033      	str	r3, [r6, #0]
 8000a14:	2000      	movs	r0, #0
 8000a16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a1a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000af0 <_malloc_r+0xfc>
 8000a1e:	f000 f869 	bl	8000af4 <__malloc_lock>
 8000a22:	f8d8 3000 	ldr.w	r3, [r8]
 8000a26:	461c      	mov	r4, r3
 8000a28:	bb44      	cbnz	r4, 8000a7c <_malloc_r+0x88>
 8000a2a:	4629      	mov	r1, r5
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	f7ff ffbf 	bl	80009b0 <sbrk_aligned>
 8000a32:	1c43      	adds	r3, r0, #1
 8000a34:	4604      	mov	r4, r0
 8000a36:	d158      	bne.n	8000aea <_malloc_r+0xf6>
 8000a38:	f8d8 4000 	ldr.w	r4, [r8]
 8000a3c:	4627      	mov	r7, r4
 8000a3e:	2f00      	cmp	r7, #0
 8000a40:	d143      	bne.n	8000aca <_malloc_r+0xd6>
 8000a42:	2c00      	cmp	r4, #0
 8000a44:	d04b      	beq.n	8000ade <_malloc_r+0xea>
 8000a46:	6823      	ldr	r3, [r4, #0]
 8000a48:	4639      	mov	r1, r7
 8000a4a:	4630      	mov	r0, r6
 8000a4c:	eb04 0903 	add.w	r9, r4, r3
 8000a50:	f000 fc54 	bl	80012fc <_sbrk_r>
 8000a54:	4581      	cmp	r9, r0
 8000a56:	d142      	bne.n	8000ade <_malloc_r+0xea>
 8000a58:	6821      	ldr	r1, [r4, #0]
 8000a5a:	1a6d      	subs	r5, r5, r1
 8000a5c:	4629      	mov	r1, r5
 8000a5e:	4630      	mov	r0, r6
 8000a60:	f7ff ffa6 	bl	80009b0 <sbrk_aligned>
 8000a64:	3001      	adds	r0, #1
 8000a66:	d03a      	beq.n	8000ade <_malloc_r+0xea>
 8000a68:	6823      	ldr	r3, [r4, #0]
 8000a6a:	442b      	add	r3, r5
 8000a6c:	6023      	str	r3, [r4, #0]
 8000a6e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a72:	685a      	ldr	r2, [r3, #4]
 8000a74:	bb62      	cbnz	r2, 8000ad0 <_malloc_r+0xdc>
 8000a76:	f8c8 7000 	str.w	r7, [r8]
 8000a7a:	e00f      	b.n	8000a9c <_malloc_r+0xa8>
 8000a7c:	6822      	ldr	r2, [r4, #0]
 8000a7e:	1b52      	subs	r2, r2, r5
 8000a80:	d420      	bmi.n	8000ac4 <_malloc_r+0xd0>
 8000a82:	2a0b      	cmp	r2, #11
 8000a84:	d917      	bls.n	8000ab6 <_malloc_r+0xc2>
 8000a86:	1961      	adds	r1, r4, r5
 8000a88:	42a3      	cmp	r3, r4
 8000a8a:	6025      	str	r5, [r4, #0]
 8000a8c:	bf18      	it	ne
 8000a8e:	6059      	strne	r1, [r3, #4]
 8000a90:	6863      	ldr	r3, [r4, #4]
 8000a92:	bf08      	it	eq
 8000a94:	f8c8 1000 	streq.w	r1, [r8]
 8000a98:	5162      	str	r2, [r4, r5]
 8000a9a:	604b      	str	r3, [r1, #4]
 8000a9c:	4630      	mov	r0, r6
 8000a9e:	f000 f82f 	bl	8000b00 <__malloc_unlock>
 8000aa2:	f104 000b 	add.w	r0, r4, #11
 8000aa6:	1d23      	adds	r3, r4, #4
 8000aa8:	f020 0007 	bic.w	r0, r0, #7
 8000aac:	1ac2      	subs	r2, r0, r3
 8000aae:	bf1c      	itt	ne
 8000ab0:	1a1b      	subne	r3, r3, r0
 8000ab2:	50a3      	strne	r3, [r4, r2]
 8000ab4:	e7af      	b.n	8000a16 <_malloc_r+0x22>
 8000ab6:	6862      	ldr	r2, [r4, #4]
 8000ab8:	42a3      	cmp	r3, r4
 8000aba:	bf0c      	ite	eq
 8000abc:	f8c8 2000 	streq.w	r2, [r8]
 8000ac0:	605a      	strne	r2, [r3, #4]
 8000ac2:	e7eb      	b.n	8000a9c <_malloc_r+0xa8>
 8000ac4:	4623      	mov	r3, r4
 8000ac6:	6864      	ldr	r4, [r4, #4]
 8000ac8:	e7ae      	b.n	8000a28 <_malloc_r+0x34>
 8000aca:	463c      	mov	r4, r7
 8000acc:	687f      	ldr	r7, [r7, #4]
 8000ace:	e7b6      	b.n	8000a3e <_malloc_r+0x4a>
 8000ad0:	461a      	mov	r2, r3
 8000ad2:	685b      	ldr	r3, [r3, #4]
 8000ad4:	42a3      	cmp	r3, r4
 8000ad6:	d1fb      	bne.n	8000ad0 <_malloc_r+0xdc>
 8000ad8:	2300      	movs	r3, #0
 8000ada:	6053      	str	r3, [r2, #4]
 8000adc:	e7de      	b.n	8000a9c <_malloc_r+0xa8>
 8000ade:	230c      	movs	r3, #12
 8000ae0:	6033      	str	r3, [r6, #0]
 8000ae2:	4630      	mov	r0, r6
 8000ae4:	f000 f80c 	bl	8000b00 <__malloc_unlock>
 8000ae8:	e794      	b.n	8000a14 <_malloc_r+0x20>
 8000aea:	6005      	str	r5, [r0, #0]
 8000aec:	e7d6      	b.n	8000a9c <_malloc_r+0xa8>
 8000aee:	bf00      	nop
 8000af0:	200001c4 	.word	0x200001c4

08000af4 <__malloc_lock>:
 8000af4:	4801      	ldr	r0, [pc, #4]	@ (8000afc <__malloc_lock+0x8>)
 8000af6:	f7ff bf0e 	b.w	8000916 <__retarget_lock_acquire_recursive>
 8000afa:	bf00      	nop
 8000afc:	200001bc 	.word	0x200001bc

08000b00 <__malloc_unlock>:
 8000b00:	4801      	ldr	r0, [pc, #4]	@ (8000b08 <__malloc_unlock+0x8>)
 8000b02:	f7ff bf09 	b.w	8000918 <__retarget_lock_release_recursive>
 8000b06:	bf00      	nop
 8000b08:	200001bc 	.word	0x200001bc

08000b0c <__sfputc_r>:
 8000b0c:	6893      	ldr	r3, [r2, #8]
 8000b0e:	3b01      	subs	r3, #1
 8000b10:	2b00      	cmp	r3, #0
 8000b12:	b410      	push	{r4}
 8000b14:	6093      	str	r3, [r2, #8]
 8000b16:	da07      	bge.n	8000b28 <__sfputc_r+0x1c>
 8000b18:	6994      	ldr	r4, [r2, #24]
 8000b1a:	42a3      	cmp	r3, r4
 8000b1c:	db01      	blt.n	8000b22 <__sfputc_r+0x16>
 8000b1e:	290a      	cmp	r1, #10
 8000b20:	d102      	bne.n	8000b28 <__sfputc_r+0x1c>
 8000b22:	bc10      	pop	{r4}
 8000b24:	f7ff bde9 	b.w	80006fa <__swbuf_r>
 8000b28:	6813      	ldr	r3, [r2, #0]
 8000b2a:	1c58      	adds	r0, r3, #1
 8000b2c:	6010      	str	r0, [r2, #0]
 8000b2e:	7019      	strb	r1, [r3, #0]
 8000b30:	4608      	mov	r0, r1
 8000b32:	bc10      	pop	{r4}
 8000b34:	4770      	bx	lr

08000b36 <__sfputs_r>:
 8000b36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b38:	4606      	mov	r6, r0
 8000b3a:	460f      	mov	r7, r1
 8000b3c:	4614      	mov	r4, r2
 8000b3e:	18d5      	adds	r5, r2, r3
 8000b40:	42ac      	cmp	r4, r5
 8000b42:	d101      	bne.n	8000b48 <__sfputs_r+0x12>
 8000b44:	2000      	movs	r0, #0
 8000b46:	e007      	b.n	8000b58 <__sfputs_r+0x22>
 8000b48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b4c:	463a      	mov	r2, r7
 8000b4e:	4630      	mov	r0, r6
 8000b50:	f7ff ffdc 	bl	8000b0c <__sfputc_r>
 8000b54:	1c43      	adds	r3, r0, #1
 8000b56:	d1f3      	bne.n	8000b40 <__sfputs_r+0xa>
 8000b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b5c <_vfiprintf_r>:
 8000b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b60:	460d      	mov	r5, r1
 8000b62:	b09d      	sub	sp, #116	@ 0x74
 8000b64:	4614      	mov	r4, r2
 8000b66:	4698      	mov	r8, r3
 8000b68:	4606      	mov	r6, r0
 8000b6a:	b118      	cbz	r0, 8000b74 <_vfiprintf_r+0x18>
 8000b6c:	6a03      	ldr	r3, [r0, #32]
 8000b6e:	b90b      	cbnz	r3, 8000b74 <_vfiprintf_r+0x18>
 8000b70:	f7ff fd38 	bl	80005e4 <__sinit>
 8000b74:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b76:	07d9      	lsls	r1, r3, #31
 8000b78:	d405      	bmi.n	8000b86 <_vfiprintf_r+0x2a>
 8000b7a:	89ab      	ldrh	r3, [r5, #12]
 8000b7c:	059a      	lsls	r2, r3, #22
 8000b7e:	d402      	bmi.n	8000b86 <_vfiprintf_r+0x2a>
 8000b80:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b82:	f7ff fec8 	bl	8000916 <__retarget_lock_acquire_recursive>
 8000b86:	89ab      	ldrh	r3, [r5, #12]
 8000b88:	071b      	lsls	r3, r3, #28
 8000b8a:	d501      	bpl.n	8000b90 <_vfiprintf_r+0x34>
 8000b8c:	692b      	ldr	r3, [r5, #16]
 8000b8e:	b99b      	cbnz	r3, 8000bb8 <_vfiprintf_r+0x5c>
 8000b90:	4629      	mov	r1, r5
 8000b92:	4630      	mov	r0, r6
 8000b94:	f7ff fdf0 	bl	8000778 <__swsetup_r>
 8000b98:	b170      	cbz	r0, 8000bb8 <_vfiprintf_r+0x5c>
 8000b9a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b9c:	07dc      	lsls	r4, r3, #31
 8000b9e:	d504      	bpl.n	8000baa <_vfiprintf_r+0x4e>
 8000ba0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ba4:	b01d      	add	sp, #116	@ 0x74
 8000ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000baa:	89ab      	ldrh	r3, [r5, #12]
 8000bac:	0598      	lsls	r0, r3, #22
 8000bae:	d4f7      	bmi.n	8000ba0 <_vfiprintf_r+0x44>
 8000bb0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bb2:	f7ff feb1 	bl	8000918 <__retarget_lock_release_recursive>
 8000bb6:	e7f3      	b.n	8000ba0 <_vfiprintf_r+0x44>
 8000bb8:	2300      	movs	r3, #0
 8000bba:	9309      	str	r3, [sp, #36]	@ 0x24
 8000bbc:	2320      	movs	r3, #32
 8000bbe:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000bc2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000bc6:	2330      	movs	r3, #48	@ 0x30
 8000bc8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000d78 <_vfiprintf_r+0x21c>
 8000bcc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000bd0:	f04f 0901 	mov.w	r9, #1
 8000bd4:	4623      	mov	r3, r4
 8000bd6:	469a      	mov	sl, r3
 8000bd8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000bdc:	b10a      	cbz	r2, 8000be2 <_vfiprintf_r+0x86>
 8000bde:	2a25      	cmp	r2, #37	@ 0x25
 8000be0:	d1f9      	bne.n	8000bd6 <_vfiprintf_r+0x7a>
 8000be2:	ebba 0b04 	subs.w	fp, sl, r4
 8000be6:	d00b      	beq.n	8000c00 <_vfiprintf_r+0xa4>
 8000be8:	465b      	mov	r3, fp
 8000bea:	4622      	mov	r2, r4
 8000bec:	4629      	mov	r1, r5
 8000bee:	4630      	mov	r0, r6
 8000bf0:	f7ff ffa1 	bl	8000b36 <__sfputs_r>
 8000bf4:	3001      	adds	r0, #1
 8000bf6:	f000 80a7 	beq.w	8000d48 <_vfiprintf_r+0x1ec>
 8000bfa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000bfc:	445a      	add	r2, fp
 8000bfe:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c00:	f89a 3000 	ldrb.w	r3, [sl]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	f000 809f 	beq.w	8000d48 <_vfiprintf_r+0x1ec>
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	f04f 32ff 	mov.w	r2, #4294967295
 8000c10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000c14:	f10a 0a01 	add.w	sl, sl, #1
 8000c18:	9304      	str	r3, [sp, #16]
 8000c1a:	9307      	str	r3, [sp, #28]
 8000c1c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000c20:	931a      	str	r3, [sp, #104]	@ 0x68
 8000c22:	4654      	mov	r4, sl
 8000c24:	2205      	movs	r2, #5
 8000c26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c2a:	4853      	ldr	r0, [pc, #332]	@ (8000d78 <_vfiprintf_r+0x21c>)
 8000c2c:	f7ff fad0 	bl	80001d0 <memchr>
 8000c30:	9a04      	ldr	r2, [sp, #16]
 8000c32:	b9d8      	cbnz	r0, 8000c6c <_vfiprintf_r+0x110>
 8000c34:	06d1      	lsls	r1, r2, #27
 8000c36:	bf44      	itt	mi
 8000c38:	2320      	movmi	r3, #32
 8000c3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c3e:	0713      	lsls	r3, r2, #28
 8000c40:	bf44      	itt	mi
 8000c42:	232b      	movmi	r3, #43	@ 0x2b
 8000c44:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c48:	f89a 3000 	ldrb.w	r3, [sl]
 8000c4c:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c4e:	d015      	beq.n	8000c7c <_vfiprintf_r+0x120>
 8000c50:	9a07      	ldr	r2, [sp, #28]
 8000c52:	4654      	mov	r4, sl
 8000c54:	2000      	movs	r0, #0
 8000c56:	f04f 0c0a 	mov.w	ip, #10
 8000c5a:	4621      	mov	r1, r4
 8000c5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c60:	3b30      	subs	r3, #48	@ 0x30
 8000c62:	2b09      	cmp	r3, #9
 8000c64:	d94b      	bls.n	8000cfe <_vfiprintf_r+0x1a2>
 8000c66:	b1b0      	cbz	r0, 8000c96 <_vfiprintf_r+0x13a>
 8000c68:	9207      	str	r2, [sp, #28]
 8000c6a:	e014      	b.n	8000c96 <_vfiprintf_r+0x13a>
 8000c6c:	eba0 0308 	sub.w	r3, r0, r8
 8000c70:	fa09 f303 	lsl.w	r3, r9, r3
 8000c74:	4313      	orrs	r3, r2
 8000c76:	9304      	str	r3, [sp, #16]
 8000c78:	46a2      	mov	sl, r4
 8000c7a:	e7d2      	b.n	8000c22 <_vfiprintf_r+0xc6>
 8000c7c:	9b03      	ldr	r3, [sp, #12]
 8000c7e:	1d19      	adds	r1, r3, #4
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	9103      	str	r1, [sp, #12]
 8000c84:	2b00      	cmp	r3, #0
 8000c86:	bfbb      	ittet	lt
 8000c88:	425b      	neglt	r3, r3
 8000c8a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c8e:	9307      	strge	r3, [sp, #28]
 8000c90:	9307      	strlt	r3, [sp, #28]
 8000c92:	bfb8      	it	lt
 8000c94:	9204      	strlt	r2, [sp, #16]
 8000c96:	7823      	ldrb	r3, [r4, #0]
 8000c98:	2b2e      	cmp	r3, #46	@ 0x2e
 8000c9a:	d10a      	bne.n	8000cb2 <_vfiprintf_r+0x156>
 8000c9c:	7863      	ldrb	r3, [r4, #1]
 8000c9e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ca0:	d132      	bne.n	8000d08 <_vfiprintf_r+0x1ac>
 8000ca2:	9b03      	ldr	r3, [sp, #12]
 8000ca4:	1d1a      	adds	r2, r3, #4
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	9203      	str	r2, [sp, #12]
 8000caa:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000cae:	3402      	adds	r4, #2
 8000cb0:	9305      	str	r3, [sp, #20]
 8000cb2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000d7c <_vfiprintf_r+0x220>
 8000cb6:	7821      	ldrb	r1, [r4, #0]
 8000cb8:	2203      	movs	r2, #3
 8000cba:	4650      	mov	r0, sl
 8000cbc:	f7ff fa88 	bl	80001d0 <memchr>
 8000cc0:	b138      	cbz	r0, 8000cd2 <_vfiprintf_r+0x176>
 8000cc2:	9b04      	ldr	r3, [sp, #16]
 8000cc4:	eba0 000a 	sub.w	r0, r0, sl
 8000cc8:	2240      	movs	r2, #64	@ 0x40
 8000cca:	4082      	lsls	r2, r0
 8000ccc:	4313      	orrs	r3, r2
 8000cce:	3401      	adds	r4, #1
 8000cd0:	9304      	str	r3, [sp, #16]
 8000cd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cd6:	482a      	ldr	r0, [pc, #168]	@ (8000d80 <_vfiprintf_r+0x224>)
 8000cd8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000cdc:	2206      	movs	r2, #6
 8000cde:	f7ff fa77 	bl	80001d0 <memchr>
 8000ce2:	2800      	cmp	r0, #0
 8000ce4:	d03f      	beq.n	8000d66 <_vfiprintf_r+0x20a>
 8000ce6:	4b27      	ldr	r3, [pc, #156]	@ (8000d84 <_vfiprintf_r+0x228>)
 8000ce8:	bb1b      	cbnz	r3, 8000d32 <_vfiprintf_r+0x1d6>
 8000cea:	9b03      	ldr	r3, [sp, #12]
 8000cec:	3307      	adds	r3, #7
 8000cee:	f023 0307 	bic.w	r3, r3, #7
 8000cf2:	3308      	adds	r3, #8
 8000cf4:	9303      	str	r3, [sp, #12]
 8000cf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000cf8:	443b      	add	r3, r7
 8000cfa:	9309      	str	r3, [sp, #36]	@ 0x24
 8000cfc:	e76a      	b.n	8000bd4 <_vfiprintf_r+0x78>
 8000cfe:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d02:	460c      	mov	r4, r1
 8000d04:	2001      	movs	r0, #1
 8000d06:	e7a8      	b.n	8000c5a <_vfiprintf_r+0xfe>
 8000d08:	2300      	movs	r3, #0
 8000d0a:	3401      	adds	r4, #1
 8000d0c:	9305      	str	r3, [sp, #20]
 8000d0e:	4619      	mov	r1, r3
 8000d10:	f04f 0c0a 	mov.w	ip, #10
 8000d14:	4620      	mov	r0, r4
 8000d16:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000d1a:	3a30      	subs	r2, #48	@ 0x30
 8000d1c:	2a09      	cmp	r2, #9
 8000d1e:	d903      	bls.n	8000d28 <_vfiprintf_r+0x1cc>
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d0c6      	beq.n	8000cb2 <_vfiprintf_r+0x156>
 8000d24:	9105      	str	r1, [sp, #20]
 8000d26:	e7c4      	b.n	8000cb2 <_vfiprintf_r+0x156>
 8000d28:	fb0c 2101 	mla	r1, ip, r1, r2
 8000d2c:	4604      	mov	r4, r0
 8000d2e:	2301      	movs	r3, #1
 8000d30:	e7f0      	b.n	8000d14 <_vfiprintf_r+0x1b8>
 8000d32:	ab03      	add	r3, sp, #12
 8000d34:	9300      	str	r3, [sp, #0]
 8000d36:	462a      	mov	r2, r5
 8000d38:	4b13      	ldr	r3, [pc, #76]	@ (8000d88 <_vfiprintf_r+0x22c>)
 8000d3a:	a904      	add	r1, sp, #16
 8000d3c:	4630      	mov	r0, r6
 8000d3e:	f3af 8000 	nop.w
 8000d42:	4607      	mov	r7, r0
 8000d44:	1c78      	adds	r0, r7, #1
 8000d46:	d1d6      	bne.n	8000cf6 <_vfiprintf_r+0x19a>
 8000d48:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d4a:	07d9      	lsls	r1, r3, #31
 8000d4c:	d405      	bmi.n	8000d5a <_vfiprintf_r+0x1fe>
 8000d4e:	89ab      	ldrh	r3, [r5, #12]
 8000d50:	059a      	lsls	r2, r3, #22
 8000d52:	d402      	bmi.n	8000d5a <_vfiprintf_r+0x1fe>
 8000d54:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d56:	f7ff fddf 	bl	8000918 <__retarget_lock_release_recursive>
 8000d5a:	89ab      	ldrh	r3, [r5, #12]
 8000d5c:	065b      	lsls	r3, r3, #25
 8000d5e:	f53f af1f 	bmi.w	8000ba0 <_vfiprintf_r+0x44>
 8000d62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000d64:	e71e      	b.n	8000ba4 <_vfiprintf_r+0x48>
 8000d66:	ab03      	add	r3, sp, #12
 8000d68:	9300      	str	r3, [sp, #0]
 8000d6a:	462a      	mov	r2, r5
 8000d6c:	4b06      	ldr	r3, [pc, #24]	@ (8000d88 <_vfiprintf_r+0x22c>)
 8000d6e:	a904      	add	r1, sp, #16
 8000d70:	4630      	mov	r0, r6
 8000d72:	f000 f879 	bl	8000e68 <_printf_i>
 8000d76:	e7e4      	b.n	8000d42 <_vfiprintf_r+0x1e6>
 8000d78:	08001354 	.word	0x08001354
 8000d7c:	0800135a 	.word	0x0800135a
 8000d80:	0800135e 	.word	0x0800135e
 8000d84:	00000000 	.word	0x00000000
 8000d88:	08000b37 	.word	0x08000b37

08000d8c <_printf_common>:
 8000d8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d90:	4616      	mov	r6, r2
 8000d92:	4698      	mov	r8, r3
 8000d94:	688a      	ldr	r2, [r1, #8]
 8000d96:	690b      	ldr	r3, [r1, #16]
 8000d98:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000d9c:	4293      	cmp	r3, r2
 8000d9e:	bfb8      	it	lt
 8000da0:	4613      	movlt	r3, r2
 8000da2:	6033      	str	r3, [r6, #0]
 8000da4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000da8:	4607      	mov	r7, r0
 8000daa:	460c      	mov	r4, r1
 8000dac:	b10a      	cbz	r2, 8000db2 <_printf_common+0x26>
 8000dae:	3301      	adds	r3, #1
 8000db0:	6033      	str	r3, [r6, #0]
 8000db2:	6823      	ldr	r3, [r4, #0]
 8000db4:	0699      	lsls	r1, r3, #26
 8000db6:	bf42      	ittt	mi
 8000db8:	6833      	ldrmi	r3, [r6, #0]
 8000dba:	3302      	addmi	r3, #2
 8000dbc:	6033      	strmi	r3, [r6, #0]
 8000dbe:	6825      	ldr	r5, [r4, #0]
 8000dc0:	f015 0506 	ands.w	r5, r5, #6
 8000dc4:	d106      	bne.n	8000dd4 <_printf_common+0x48>
 8000dc6:	f104 0a19 	add.w	sl, r4, #25
 8000dca:	68e3      	ldr	r3, [r4, #12]
 8000dcc:	6832      	ldr	r2, [r6, #0]
 8000dce:	1a9b      	subs	r3, r3, r2
 8000dd0:	42ab      	cmp	r3, r5
 8000dd2:	dc26      	bgt.n	8000e22 <_printf_common+0x96>
 8000dd4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000dd8:	6822      	ldr	r2, [r4, #0]
 8000dda:	3b00      	subs	r3, #0
 8000ddc:	bf18      	it	ne
 8000dde:	2301      	movne	r3, #1
 8000de0:	0692      	lsls	r2, r2, #26
 8000de2:	d42b      	bmi.n	8000e3c <_printf_common+0xb0>
 8000de4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000de8:	4641      	mov	r1, r8
 8000dea:	4638      	mov	r0, r7
 8000dec:	47c8      	blx	r9
 8000dee:	3001      	adds	r0, #1
 8000df0:	d01e      	beq.n	8000e30 <_printf_common+0xa4>
 8000df2:	6823      	ldr	r3, [r4, #0]
 8000df4:	6922      	ldr	r2, [r4, #16]
 8000df6:	f003 0306 	and.w	r3, r3, #6
 8000dfa:	2b04      	cmp	r3, #4
 8000dfc:	bf02      	ittt	eq
 8000dfe:	68e5      	ldreq	r5, [r4, #12]
 8000e00:	6833      	ldreq	r3, [r6, #0]
 8000e02:	1aed      	subeq	r5, r5, r3
 8000e04:	68a3      	ldr	r3, [r4, #8]
 8000e06:	bf0c      	ite	eq
 8000e08:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e0c:	2500      	movne	r5, #0
 8000e0e:	4293      	cmp	r3, r2
 8000e10:	bfc4      	itt	gt
 8000e12:	1a9b      	subgt	r3, r3, r2
 8000e14:	18ed      	addgt	r5, r5, r3
 8000e16:	2600      	movs	r6, #0
 8000e18:	341a      	adds	r4, #26
 8000e1a:	42b5      	cmp	r5, r6
 8000e1c:	d11a      	bne.n	8000e54 <_printf_common+0xc8>
 8000e1e:	2000      	movs	r0, #0
 8000e20:	e008      	b.n	8000e34 <_printf_common+0xa8>
 8000e22:	2301      	movs	r3, #1
 8000e24:	4652      	mov	r2, sl
 8000e26:	4641      	mov	r1, r8
 8000e28:	4638      	mov	r0, r7
 8000e2a:	47c8      	blx	r9
 8000e2c:	3001      	adds	r0, #1
 8000e2e:	d103      	bne.n	8000e38 <_printf_common+0xac>
 8000e30:	f04f 30ff 	mov.w	r0, #4294967295
 8000e34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e38:	3501      	adds	r5, #1
 8000e3a:	e7c6      	b.n	8000dca <_printf_common+0x3e>
 8000e3c:	18e1      	adds	r1, r4, r3
 8000e3e:	1c5a      	adds	r2, r3, #1
 8000e40:	2030      	movs	r0, #48	@ 0x30
 8000e42:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000e46:	4422      	add	r2, r4
 8000e48:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000e4c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000e50:	3302      	adds	r3, #2
 8000e52:	e7c7      	b.n	8000de4 <_printf_common+0x58>
 8000e54:	2301      	movs	r3, #1
 8000e56:	4622      	mov	r2, r4
 8000e58:	4641      	mov	r1, r8
 8000e5a:	4638      	mov	r0, r7
 8000e5c:	47c8      	blx	r9
 8000e5e:	3001      	adds	r0, #1
 8000e60:	d0e6      	beq.n	8000e30 <_printf_common+0xa4>
 8000e62:	3601      	adds	r6, #1
 8000e64:	e7d9      	b.n	8000e1a <_printf_common+0x8e>
	...

08000e68 <_printf_i>:
 8000e68:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e6c:	7e0f      	ldrb	r7, [r1, #24]
 8000e6e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000e70:	2f78      	cmp	r7, #120	@ 0x78
 8000e72:	4691      	mov	r9, r2
 8000e74:	4680      	mov	r8, r0
 8000e76:	460c      	mov	r4, r1
 8000e78:	469a      	mov	sl, r3
 8000e7a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000e7e:	d807      	bhi.n	8000e90 <_printf_i+0x28>
 8000e80:	2f62      	cmp	r7, #98	@ 0x62
 8000e82:	d80a      	bhi.n	8000e9a <_printf_i+0x32>
 8000e84:	2f00      	cmp	r7, #0
 8000e86:	f000 80d1 	beq.w	800102c <_printf_i+0x1c4>
 8000e8a:	2f58      	cmp	r7, #88	@ 0x58
 8000e8c:	f000 80b8 	beq.w	8001000 <_printf_i+0x198>
 8000e90:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e94:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000e98:	e03a      	b.n	8000f10 <_printf_i+0xa8>
 8000e9a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000e9e:	2b15      	cmp	r3, #21
 8000ea0:	d8f6      	bhi.n	8000e90 <_printf_i+0x28>
 8000ea2:	a101      	add	r1, pc, #4	@ (adr r1, 8000ea8 <_printf_i+0x40>)
 8000ea4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ea8:	08000f01 	.word	0x08000f01
 8000eac:	08000f15 	.word	0x08000f15
 8000eb0:	08000e91 	.word	0x08000e91
 8000eb4:	08000e91 	.word	0x08000e91
 8000eb8:	08000e91 	.word	0x08000e91
 8000ebc:	08000e91 	.word	0x08000e91
 8000ec0:	08000f15 	.word	0x08000f15
 8000ec4:	08000e91 	.word	0x08000e91
 8000ec8:	08000e91 	.word	0x08000e91
 8000ecc:	08000e91 	.word	0x08000e91
 8000ed0:	08000e91 	.word	0x08000e91
 8000ed4:	08001013 	.word	0x08001013
 8000ed8:	08000f3f 	.word	0x08000f3f
 8000edc:	08000fcd 	.word	0x08000fcd
 8000ee0:	08000e91 	.word	0x08000e91
 8000ee4:	08000e91 	.word	0x08000e91
 8000ee8:	08001035 	.word	0x08001035
 8000eec:	08000e91 	.word	0x08000e91
 8000ef0:	08000f3f 	.word	0x08000f3f
 8000ef4:	08000e91 	.word	0x08000e91
 8000ef8:	08000e91 	.word	0x08000e91
 8000efc:	08000fd5 	.word	0x08000fd5
 8000f00:	6833      	ldr	r3, [r6, #0]
 8000f02:	1d1a      	adds	r2, r3, #4
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	6032      	str	r2, [r6, #0]
 8000f08:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f0c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000f10:	2301      	movs	r3, #1
 8000f12:	e09c      	b.n	800104e <_printf_i+0x1e6>
 8000f14:	6833      	ldr	r3, [r6, #0]
 8000f16:	6820      	ldr	r0, [r4, #0]
 8000f18:	1d19      	adds	r1, r3, #4
 8000f1a:	6031      	str	r1, [r6, #0]
 8000f1c:	0606      	lsls	r6, r0, #24
 8000f1e:	d501      	bpl.n	8000f24 <_printf_i+0xbc>
 8000f20:	681d      	ldr	r5, [r3, #0]
 8000f22:	e003      	b.n	8000f2c <_printf_i+0xc4>
 8000f24:	0645      	lsls	r5, r0, #25
 8000f26:	d5fb      	bpl.n	8000f20 <_printf_i+0xb8>
 8000f28:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000f2c:	2d00      	cmp	r5, #0
 8000f2e:	da03      	bge.n	8000f38 <_printf_i+0xd0>
 8000f30:	232d      	movs	r3, #45	@ 0x2d
 8000f32:	426d      	negs	r5, r5
 8000f34:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f38:	4858      	ldr	r0, [pc, #352]	@ (800109c <_printf_i+0x234>)
 8000f3a:	230a      	movs	r3, #10
 8000f3c:	e011      	b.n	8000f62 <_printf_i+0xfa>
 8000f3e:	6821      	ldr	r1, [r4, #0]
 8000f40:	6833      	ldr	r3, [r6, #0]
 8000f42:	0608      	lsls	r0, r1, #24
 8000f44:	f853 5b04 	ldr.w	r5, [r3], #4
 8000f48:	d402      	bmi.n	8000f50 <_printf_i+0xe8>
 8000f4a:	0649      	lsls	r1, r1, #25
 8000f4c:	bf48      	it	mi
 8000f4e:	b2ad      	uxthmi	r5, r5
 8000f50:	2f6f      	cmp	r7, #111	@ 0x6f
 8000f52:	4852      	ldr	r0, [pc, #328]	@ (800109c <_printf_i+0x234>)
 8000f54:	6033      	str	r3, [r6, #0]
 8000f56:	bf14      	ite	ne
 8000f58:	230a      	movne	r3, #10
 8000f5a:	2308      	moveq	r3, #8
 8000f5c:	2100      	movs	r1, #0
 8000f5e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000f62:	6866      	ldr	r6, [r4, #4]
 8000f64:	60a6      	str	r6, [r4, #8]
 8000f66:	2e00      	cmp	r6, #0
 8000f68:	db05      	blt.n	8000f76 <_printf_i+0x10e>
 8000f6a:	6821      	ldr	r1, [r4, #0]
 8000f6c:	432e      	orrs	r6, r5
 8000f6e:	f021 0104 	bic.w	r1, r1, #4
 8000f72:	6021      	str	r1, [r4, #0]
 8000f74:	d04b      	beq.n	800100e <_printf_i+0x1a6>
 8000f76:	4616      	mov	r6, r2
 8000f78:	fbb5 f1f3 	udiv	r1, r5, r3
 8000f7c:	fb03 5711 	mls	r7, r3, r1, r5
 8000f80:	5dc7      	ldrb	r7, [r0, r7]
 8000f82:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000f86:	462f      	mov	r7, r5
 8000f88:	42bb      	cmp	r3, r7
 8000f8a:	460d      	mov	r5, r1
 8000f8c:	d9f4      	bls.n	8000f78 <_printf_i+0x110>
 8000f8e:	2b08      	cmp	r3, #8
 8000f90:	d10b      	bne.n	8000faa <_printf_i+0x142>
 8000f92:	6823      	ldr	r3, [r4, #0]
 8000f94:	07df      	lsls	r7, r3, #31
 8000f96:	d508      	bpl.n	8000faa <_printf_i+0x142>
 8000f98:	6923      	ldr	r3, [r4, #16]
 8000f9a:	6861      	ldr	r1, [r4, #4]
 8000f9c:	4299      	cmp	r1, r3
 8000f9e:	bfde      	ittt	le
 8000fa0:	2330      	movle	r3, #48	@ 0x30
 8000fa2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000fa6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000faa:	1b92      	subs	r2, r2, r6
 8000fac:	6122      	str	r2, [r4, #16]
 8000fae:	f8cd a000 	str.w	sl, [sp]
 8000fb2:	464b      	mov	r3, r9
 8000fb4:	aa03      	add	r2, sp, #12
 8000fb6:	4621      	mov	r1, r4
 8000fb8:	4640      	mov	r0, r8
 8000fba:	f7ff fee7 	bl	8000d8c <_printf_common>
 8000fbe:	3001      	adds	r0, #1
 8000fc0:	d14a      	bne.n	8001058 <_printf_i+0x1f0>
 8000fc2:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc6:	b004      	add	sp, #16
 8000fc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fcc:	6823      	ldr	r3, [r4, #0]
 8000fce:	f043 0320 	orr.w	r3, r3, #32
 8000fd2:	6023      	str	r3, [r4, #0]
 8000fd4:	4832      	ldr	r0, [pc, #200]	@ (80010a0 <_printf_i+0x238>)
 8000fd6:	2778      	movs	r7, #120	@ 0x78
 8000fd8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000fdc:	6823      	ldr	r3, [r4, #0]
 8000fde:	6831      	ldr	r1, [r6, #0]
 8000fe0:	061f      	lsls	r7, r3, #24
 8000fe2:	f851 5b04 	ldr.w	r5, [r1], #4
 8000fe6:	d402      	bmi.n	8000fee <_printf_i+0x186>
 8000fe8:	065f      	lsls	r7, r3, #25
 8000fea:	bf48      	it	mi
 8000fec:	b2ad      	uxthmi	r5, r5
 8000fee:	6031      	str	r1, [r6, #0]
 8000ff0:	07d9      	lsls	r1, r3, #31
 8000ff2:	bf44      	itt	mi
 8000ff4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ff8:	6023      	strmi	r3, [r4, #0]
 8000ffa:	b11d      	cbz	r5, 8001004 <_printf_i+0x19c>
 8000ffc:	2310      	movs	r3, #16
 8000ffe:	e7ad      	b.n	8000f5c <_printf_i+0xf4>
 8001000:	4826      	ldr	r0, [pc, #152]	@ (800109c <_printf_i+0x234>)
 8001002:	e7e9      	b.n	8000fd8 <_printf_i+0x170>
 8001004:	6823      	ldr	r3, [r4, #0]
 8001006:	f023 0320 	bic.w	r3, r3, #32
 800100a:	6023      	str	r3, [r4, #0]
 800100c:	e7f6      	b.n	8000ffc <_printf_i+0x194>
 800100e:	4616      	mov	r6, r2
 8001010:	e7bd      	b.n	8000f8e <_printf_i+0x126>
 8001012:	6833      	ldr	r3, [r6, #0]
 8001014:	6825      	ldr	r5, [r4, #0]
 8001016:	6961      	ldr	r1, [r4, #20]
 8001018:	1d18      	adds	r0, r3, #4
 800101a:	6030      	str	r0, [r6, #0]
 800101c:	062e      	lsls	r6, r5, #24
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	d501      	bpl.n	8001026 <_printf_i+0x1be>
 8001022:	6019      	str	r1, [r3, #0]
 8001024:	e002      	b.n	800102c <_printf_i+0x1c4>
 8001026:	0668      	lsls	r0, r5, #25
 8001028:	d5fb      	bpl.n	8001022 <_printf_i+0x1ba>
 800102a:	8019      	strh	r1, [r3, #0]
 800102c:	2300      	movs	r3, #0
 800102e:	6123      	str	r3, [r4, #16]
 8001030:	4616      	mov	r6, r2
 8001032:	e7bc      	b.n	8000fae <_printf_i+0x146>
 8001034:	6833      	ldr	r3, [r6, #0]
 8001036:	1d1a      	adds	r2, r3, #4
 8001038:	6032      	str	r2, [r6, #0]
 800103a:	681e      	ldr	r6, [r3, #0]
 800103c:	6862      	ldr	r2, [r4, #4]
 800103e:	2100      	movs	r1, #0
 8001040:	4630      	mov	r0, r6
 8001042:	f7ff f8c5 	bl	80001d0 <memchr>
 8001046:	b108      	cbz	r0, 800104c <_printf_i+0x1e4>
 8001048:	1b80      	subs	r0, r0, r6
 800104a:	6060      	str	r0, [r4, #4]
 800104c:	6863      	ldr	r3, [r4, #4]
 800104e:	6123      	str	r3, [r4, #16]
 8001050:	2300      	movs	r3, #0
 8001052:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001056:	e7aa      	b.n	8000fae <_printf_i+0x146>
 8001058:	6923      	ldr	r3, [r4, #16]
 800105a:	4632      	mov	r2, r6
 800105c:	4649      	mov	r1, r9
 800105e:	4640      	mov	r0, r8
 8001060:	47d0      	blx	sl
 8001062:	3001      	adds	r0, #1
 8001064:	d0ad      	beq.n	8000fc2 <_printf_i+0x15a>
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	079b      	lsls	r3, r3, #30
 800106a:	d413      	bmi.n	8001094 <_printf_i+0x22c>
 800106c:	68e0      	ldr	r0, [r4, #12]
 800106e:	9b03      	ldr	r3, [sp, #12]
 8001070:	4298      	cmp	r0, r3
 8001072:	bfb8      	it	lt
 8001074:	4618      	movlt	r0, r3
 8001076:	e7a6      	b.n	8000fc6 <_printf_i+0x15e>
 8001078:	2301      	movs	r3, #1
 800107a:	4632      	mov	r2, r6
 800107c:	4649      	mov	r1, r9
 800107e:	4640      	mov	r0, r8
 8001080:	47d0      	blx	sl
 8001082:	3001      	adds	r0, #1
 8001084:	d09d      	beq.n	8000fc2 <_printf_i+0x15a>
 8001086:	3501      	adds	r5, #1
 8001088:	68e3      	ldr	r3, [r4, #12]
 800108a:	9903      	ldr	r1, [sp, #12]
 800108c:	1a5b      	subs	r3, r3, r1
 800108e:	42ab      	cmp	r3, r5
 8001090:	dcf2      	bgt.n	8001078 <_printf_i+0x210>
 8001092:	e7eb      	b.n	800106c <_printf_i+0x204>
 8001094:	2500      	movs	r5, #0
 8001096:	f104 0619 	add.w	r6, r4, #25
 800109a:	e7f5      	b.n	8001088 <_printf_i+0x220>
 800109c:	08001365 	.word	0x08001365
 80010a0:	08001376 	.word	0x08001376

080010a4 <__sflush_r>:
 80010a4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80010a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010aa:	0716      	lsls	r6, r2, #28
 80010ac:	4605      	mov	r5, r0
 80010ae:	460c      	mov	r4, r1
 80010b0:	d454      	bmi.n	800115c <__sflush_r+0xb8>
 80010b2:	684b      	ldr	r3, [r1, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	dc02      	bgt.n	80010be <__sflush_r+0x1a>
 80010b8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	dd48      	ble.n	8001150 <__sflush_r+0xac>
 80010be:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80010c0:	2e00      	cmp	r6, #0
 80010c2:	d045      	beq.n	8001150 <__sflush_r+0xac>
 80010c4:	2300      	movs	r3, #0
 80010c6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80010ca:	682f      	ldr	r7, [r5, #0]
 80010cc:	6a21      	ldr	r1, [r4, #32]
 80010ce:	602b      	str	r3, [r5, #0]
 80010d0:	d030      	beq.n	8001134 <__sflush_r+0x90>
 80010d2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	0759      	lsls	r1, r3, #29
 80010d8:	d505      	bpl.n	80010e6 <__sflush_r+0x42>
 80010da:	6863      	ldr	r3, [r4, #4]
 80010dc:	1ad2      	subs	r2, r2, r3
 80010de:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80010e0:	b10b      	cbz	r3, 80010e6 <__sflush_r+0x42>
 80010e2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80010e4:	1ad2      	subs	r2, r2, r3
 80010e6:	2300      	movs	r3, #0
 80010e8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80010ea:	6a21      	ldr	r1, [r4, #32]
 80010ec:	4628      	mov	r0, r5
 80010ee:	47b0      	blx	r6
 80010f0:	1c43      	adds	r3, r0, #1
 80010f2:	89a3      	ldrh	r3, [r4, #12]
 80010f4:	d106      	bne.n	8001104 <__sflush_r+0x60>
 80010f6:	6829      	ldr	r1, [r5, #0]
 80010f8:	291d      	cmp	r1, #29
 80010fa:	d82b      	bhi.n	8001154 <__sflush_r+0xb0>
 80010fc:	4a28      	ldr	r2, [pc, #160]	@ (80011a0 <__sflush_r+0xfc>)
 80010fe:	40ca      	lsrs	r2, r1
 8001100:	07d6      	lsls	r6, r2, #31
 8001102:	d527      	bpl.n	8001154 <__sflush_r+0xb0>
 8001104:	2200      	movs	r2, #0
 8001106:	6062      	str	r2, [r4, #4]
 8001108:	04d9      	lsls	r1, r3, #19
 800110a:	6922      	ldr	r2, [r4, #16]
 800110c:	6022      	str	r2, [r4, #0]
 800110e:	d504      	bpl.n	800111a <__sflush_r+0x76>
 8001110:	1c42      	adds	r2, r0, #1
 8001112:	d101      	bne.n	8001118 <__sflush_r+0x74>
 8001114:	682b      	ldr	r3, [r5, #0]
 8001116:	b903      	cbnz	r3, 800111a <__sflush_r+0x76>
 8001118:	6560      	str	r0, [r4, #84]	@ 0x54
 800111a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800111c:	602f      	str	r7, [r5, #0]
 800111e:	b1b9      	cbz	r1, 8001150 <__sflush_r+0xac>
 8001120:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001124:	4299      	cmp	r1, r3
 8001126:	d002      	beq.n	800112e <__sflush_r+0x8a>
 8001128:	4628      	mov	r0, r5
 800112a:	f7ff fbf7 	bl	800091c <_free_r>
 800112e:	2300      	movs	r3, #0
 8001130:	6363      	str	r3, [r4, #52]	@ 0x34
 8001132:	e00d      	b.n	8001150 <__sflush_r+0xac>
 8001134:	2301      	movs	r3, #1
 8001136:	4628      	mov	r0, r5
 8001138:	47b0      	blx	r6
 800113a:	4602      	mov	r2, r0
 800113c:	1c50      	adds	r0, r2, #1
 800113e:	d1c9      	bne.n	80010d4 <__sflush_r+0x30>
 8001140:	682b      	ldr	r3, [r5, #0]
 8001142:	2b00      	cmp	r3, #0
 8001144:	d0c6      	beq.n	80010d4 <__sflush_r+0x30>
 8001146:	2b1d      	cmp	r3, #29
 8001148:	d001      	beq.n	800114e <__sflush_r+0xaa>
 800114a:	2b16      	cmp	r3, #22
 800114c:	d11d      	bne.n	800118a <__sflush_r+0xe6>
 800114e:	602f      	str	r7, [r5, #0]
 8001150:	2000      	movs	r0, #0
 8001152:	e021      	b.n	8001198 <__sflush_r+0xf4>
 8001154:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001158:	b21b      	sxth	r3, r3
 800115a:	e01a      	b.n	8001192 <__sflush_r+0xee>
 800115c:	690f      	ldr	r7, [r1, #16]
 800115e:	2f00      	cmp	r7, #0
 8001160:	d0f6      	beq.n	8001150 <__sflush_r+0xac>
 8001162:	0793      	lsls	r3, r2, #30
 8001164:	680e      	ldr	r6, [r1, #0]
 8001166:	bf08      	it	eq
 8001168:	694b      	ldreq	r3, [r1, #20]
 800116a:	600f      	str	r7, [r1, #0]
 800116c:	bf18      	it	ne
 800116e:	2300      	movne	r3, #0
 8001170:	1bf6      	subs	r6, r6, r7
 8001172:	608b      	str	r3, [r1, #8]
 8001174:	2e00      	cmp	r6, #0
 8001176:	ddeb      	ble.n	8001150 <__sflush_r+0xac>
 8001178:	6a21      	ldr	r1, [r4, #32]
 800117a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800117e:	4633      	mov	r3, r6
 8001180:	463a      	mov	r2, r7
 8001182:	4628      	mov	r0, r5
 8001184:	47e0      	blx	ip
 8001186:	2800      	cmp	r0, #0
 8001188:	dc07      	bgt.n	800119a <__sflush_r+0xf6>
 800118a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800118e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001192:	81a3      	strh	r3, [r4, #12]
 8001194:	f04f 30ff 	mov.w	r0, #4294967295
 8001198:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800119a:	4407      	add	r7, r0
 800119c:	1a36      	subs	r6, r6, r0
 800119e:	e7e9      	b.n	8001174 <__sflush_r+0xd0>
 80011a0:	20400001 	.word	0x20400001

080011a4 <_fflush_r>:
 80011a4:	b538      	push	{r3, r4, r5, lr}
 80011a6:	690b      	ldr	r3, [r1, #16]
 80011a8:	4605      	mov	r5, r0
 80011aa:	460c      	mov	r4, r1
 80011ac:	b913      	cbnz	r3, 80011b4 <_fflush_r+0x10>
 80011ae:	2500      	movs	r5, #0
 80011b0:	4628      	mov	r0, r5
 80011b2:	bd38      	pop	{r3, r4, r5, pc}
 80011b4:	b118      	cbz	r0, 80011be <_fflush_r+0x1a>
 80011b6:	6a03      	ldr	r3, [r0, #32]
 80011b8:	b90b      	cbnz	r3, 80011be <_fflush_r+0x1a>
 80011ba:	f7ff fa13 	bl	80005e4 <__sinit>
 80011be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d0f3      	beq.n	80011ae <_fflush_r+0xa>
 80011c6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80011c8:	07d0      	lsls	r0, r2, #31
 80011ca:	d404      	bmi.n	80011d6 <_fflush_r+0x32>
 80011cc:	0599      	lsls	r1, r3, #22
 80011ce:	d402      	bmi.n	80011d6 <_fflush_r+0x32>
 80011d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80011d2:	f7ff fba0 	bl	8000916 <__retarget_lock_acquire_recursive>
 80011d6:	4628      	mov	r0, r5
 80011d8:	4621      	mov	r1, r4
 80011da:	f7ff ff63 	bl	80010a4 <__sflush_r>
 80011de:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80011e0:	07da      	lsls	r2, r3, #31
 80011e2:	4605      	mov	r5, r0
 80011e4:	d4e4      	bmi.n	80011b0 <_fflush_r+0xc>
 80011e6:	89a3      	ldrh	r3, [r4, #12]
 80011e8:	059b      	lsls	r3, r3, #22
 80011ea:	d4e1      	bmi.n	80011b0 <_fflush_r+0xc>
 80011ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80011ee:	f7ff fb93 	bl	8000918 <__retarget_lock_release_recursive>
 80011f2:	e7dd      	b.n	80011b0 <_fflush_r+0xc>

080011f4 <__swhatbuf_r>:
 80011f4:	b570      	push	{r4, r5, r6, lr}
 80011f6:	460c      	mov	r4, r1
 80011f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011fc:	2900      	cmp	r1, #0
 80011fe:	b096      	sub	sp, #88	@ 0x58
 8001200:	4615      	mov	r5, r2
 8001202:	461e      	mov	r6, r3
 8001204:	da0d      	bge.n	8001222 <__swhatbuf_r+0x2e>
 8001206:	89a3      	ldrh	r3, [r4, #12]
 8001208:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800120c:	f04f 0100 	mov.w	r1, #0
 8001210:	bf14      	ite	ne
 8001212:	2340      	movne	r3, #64	@ 0x40
 8001214:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001218:	2000      	movs	r0, #0
 800121a:	6031      	str	r1, [r6, #0]
 800121c:	602b      	str	r3, [r5, #0]
 800121e:	b016      	add	sp, #88	@ 0x58
 8001220:	bd70      	pop	{r4, r5, r6, pc}
 8001222:	466a      	mov	r2, sp
 8001224:	f000 f848 	bl	80012b8 <_fstat_r>
 8001228:	2800      	cmp	r0, #0
 800122a:	dbec      	blt.n	8001206 <__swhatbuf_r+0x12>
 800122c:	9901      	ldr	r1, [sp, #4]
 800122e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001232:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001236:	4259      	negs	r1, r3
 8001238:	4159      	adcs	r1, r3
 800123a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800123e:	e7eb      	b.n	8001218 <__swhatbuf_r+0x24>

08001240 <__smakebuf_r>:
 8001240:	898b      	ldrh	r3, [r1, #12]
 8001242:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001244:	079d      	lsls	r5, r3, #30
 8001246:	4606      	mov	r6, r0
 8001248:	460c      	mov	r4, r1
 800124a:	d507      	bpl.n	800125c <__smakebuf_r+0x1c>
 800124c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001250:	6023      	str	r3, [r4, #0]
 8001252:	6123      	str	r3, [r4, #16]
 8001254:	2301      	movs	r3, #1
 8001256:	6163      	str	r3, [r4, #20]
 8001258:	b003      	add	sp, #12
 800125a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800125c:	ab01      	add	r3, sp, #4
 800125e:	466a      	mov	r2, sp
 8001260:	f7ff ffc8 	bl	80011f4 <__swhatbuf_r>
 8001264:	9f00      	ldr	r7, [sp, #0]
 8001266:	4605      	mov	r5, r0
 8001268:	4639      	mov	r1, r7
 800126a:	4630      	mov	r0, r6
 800126c:	f7ff fbc2 	bl	80009f4 <_malloc_r>
 8001270:	b948      	cbnz	r0, 8001286 <__smakebuf_r+0x46>
 8001272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001276:	059a      	lsls	r2, r3, #22
 8001278:	d4ee      	bmi.n	8001258 <__smakebuf_r+0x18>
 800127a:	f023 0303 	bic.w	r3, r3, #3
 800127e:	f043 0302 	orr.w	r3, r3, #2
 8001282:	81a3      	strh	r3, [r4, #12]
 8001284:	e7e2      	b.n	800124c <__smakebuf_r+0xc>
 8001286:	89a3      	ldrh	r3, [r4, #12]
 8001288:	6020      	str	r0, [r4, #0]
 800128a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800128e:	81a3      	strh	r3, [r4, #12]
 8001290:	9b01      	ldr	r3, [sp, #4]
 8001292:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001296:	b15b      	cbz	r3, 80012b0 <__smakebuf_r+0x70>
 8001298:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800129c:	4630      	mov	r0, r6
 800129e:	f000 f81d 	bl	80012dc <_isatty_r>
 80012a2:	b128      	cbz	r0, 80012b0 <__smakebuf_r+0x70>
 80012a4:	89a3      	ldrh	r3, [r4, #12]
 80012a6:	f023 0303 	bic.w	r3, r3, #3
 80012aa:	f043 0301 	orr.w	r3, r3, #1
 80012ae:	81a3      	strh	r3, [r4, #12]
 80012b0:	89a3      	ldrh	r3, [r4, #12]
 80012b2:	431d      	orrs	r5, r3
 80012b4:	81a5      	strh	r5, [r4, #12]
 80012b6:	e7cf      	b.n	8001258 <__smakebuf_r+0x18>

080012b8 <_fstat_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d07      	ldr	r5, [pc, #28]	@ (80012d8 <_fstat_r+0x20>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	4611      	mov	r1, r2
 80012c4:	602b      	str	r3, [r5, #0]
 80012c6:	f7ff f87b 	bl	80003c0 <_fstat>
 80012ca:	1c43      	adds	r3, r0, #1
 80012cc:	d102      	bne.n	80012d4 <_fstat_r+0x1c>
 80012ce:	682b      	ldr	r3, [r5, #0]
 80012d0:	b103      	cbz	r3, 80012d4 <_fstat_r+0x1c>
 80012d2:	6023      	str	r3, [r4, #0]
 80012d4:	bd38      	pop	{r3, r4, r5, pc}
 80012d6:	bf00      	nop
 80012d8:	200001b8 	.word	0x200001b8

080012dc <_isatty_r>:
 80012dc:	b538      	push	{r3, r4, r5, lr}
 80012de:	4d06      	ldr	r5, [pc, #24]	@ (80012f8 <_isatty_r+0x1c>)
 80012e0:	2300      	movs	r3, #0
 80012e2:	4604      	mov	r4, r0
 80012e4:	4608      	mov	r0, r1
 80012e6:	602b      	str	r3, [r5, #0]
 80012e8:	f7ff f879 	bl	80003de <_isatty>
 80012ec:	1c43      	adds	r3, r0, #1
 80012ee:	d102      	bne.n	80012f6 <_isatty_r+0x1a>
 80012f0:	682b      	ldr	r3, [r5, #0]
 80012f2:	b103      	cbz	r3, 80012f6 <_isatty_r+0x1a>
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	bd38      	pop	{r3, r4, r5, pc}
 80012f8:	200001b8 	.word	0x200001b8

080012fc <_sbrk_r>:
 80012fc:	b538      	push	{r3, r4, r5, lr}
 80012fe:	4d06      	ldr	r5, [pc, #24]	@ (8001318 <_sbrk_r+0x1c>)
 8001300:	2300      	movs	r3, #0
 8001302:	4604      	mov	r4, r0
 8001304:	4608      	mov	r0, r1
 8001306:	602b      	str	r3, [r5, #0]
 8001308:	f7ff f880 	bl	800040c <_sbrk>
 800130c:	1c43      	adds	r3, r0, #1
 800130e:	d102      	bne.n	8001316 <_sbrk_r+0x1a>
 8001310:	682b      	ldr	r3, [r5, #0]
 8001312:	b103      	cbz	r3, 8001316 <_sbrk_r+0x1a>
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	bd38      	pop	{r3, r4, r5, pc}
 8001318:	200001b8 	.word	0x200001b8

0800131c <_init>:
 800131c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800131e:	bf00      	nop
 8001320:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001322:	bc08      	pop	{r3}
 8001324:	469e      	mov	lr, r3
 8001326:	4770      	bx	lr

08001328 <_fini>:
 8001328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800132a:	bf00      	nop
 800132c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800132e:	bc08      	pop	{r3}
 8001330:	469e      	mov	lr, r3
 8001332:	4770      	bx	lr
